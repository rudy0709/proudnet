  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "SynchWorldC2S_common.h"

     
namespace SynchWorldC2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestLocalHeroSpawn ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const Vector3 & , const float & )		{ 
			return false;
		} 

#define DECRMI_SynchWorldC2S_RequestLocalHeroSpawn bool RequestLocalHeroSpawn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & heroName, const Vector3 & position, const float & direction) PN_OVERRIDE

#define DEFRMI_SynchWorldC2S_RequestLocalHeroSpawn(DerivedClass) bool DerivedClass::RequestLocalHeroSpawn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & heroName, const Vector3 & position, const float & direction)
#define CALL_SynchWorldC2S_RequestLocalHeroSpawn RequestLocalHeroSpawn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & heroName, const Vector3 & position, const float & direction)
#define PARAM_SynchWorldC2S_RequestLocalHeroSpawn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & heroName, const Vector3 & position, const float & direction)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestLocalHeroSpawn;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const Vector3 & , const float & ) > RequestLocalHeroSpawn_Function;
		virtual bool RequestLocalHeroSpawn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & heroName, const Vector3 & position, const float & direction) 
		{ 
			if (RequestLocalHeroSpawn_Function==nullptr) 
				return true; 
			return RequestLocalHeroSpawn_Function(remote,rmiContext, heroName, position, direction); 
		}

	};
#endif

}


