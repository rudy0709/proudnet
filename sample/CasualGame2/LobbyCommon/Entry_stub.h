  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "Entry_common.h"

     
namespace EntryC2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestReturnToEntry ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestReturnToEntry bool RequestReturnToEntry ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestReturnToEntry(DerivedClass) bool DerivedClass::RequestReturnToEntry ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
#define CALL_EntryC2S_RequestReturnToEntry RequestReturnToEntry ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
#define PARAM_EntryC2S_RequestReturnToEntry ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
               
		virtual bool RequestCreateNewGamer ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const String & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestCreateNewGamer bool RequestCreateNewGamer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & Password) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestCreateNewGamer(DerivedClass) bool DerivedClass::RequestCreateNewGamer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & Password)
#define CALL_EntryC2S_RequestCreateNewGamer RequestCreateNewGamer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & Password)
#define PARAM_EntryC2S_RequestCreateNewGamer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & Password)
               
		virtual bool RequestFirstLogon ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const String & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestFirstLogon bool RequestFirstLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & gamerPassword) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestFirstLogon(DerivedClass) bool DerivedClass::RequestFirstLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & gamerPassword)
#define CALL_EntryC2S_RequestFirstLogon RequestFirstLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & gamerPassword)
#define PARAM_EntryC2S_RequestFirstLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & gamerPassword)
               
		virtual bool RequestHeroSlots ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestHeroSlots bool RequestHeroSlots ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestHeroSlots(DerivedClass) bool DerivedClass::RequestHeroSlots ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryC2S_RequestHeroSlots RequestHeroSlots ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryC2S_RequestHeroSlots ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RequestSelectHero ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestSelectHero bool RequestSelectHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestSelectHero(DerivedClass) bool DerivedClass::RequestSelectHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define CALL_EntryC2S_RequestSelectHero RequestSelectHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define PARAM_EntryC2S_RequestSelectHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
               
		virtual bool RequestAddHero ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestAddHero bool RequestAddHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const int & heroType) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestAddHero(DerivedClass) bool DerivedClass::RequestAddHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const int & heroType)
#define CALL_EntryC2S_RequestAddHero RequestAddHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const int & heroType)
#define PARAM_EntryC2S_RequestAddHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const int & heroType)
               
		virtual bool RequestRemoveHero ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestRemoveHero bool RequestRemoveHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestRemoveHero(DerivedClass) bool DerivedClass::RequestRemoveHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define CALL_EntryC2S_RequestRemoveHero RequestRemoveHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define PARAM_EntryC2S_RequestRemoveHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
               
		virtual bool RequestLobbyList ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryC2S_RequestLobbyList bool RequestLobbyList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryC2S_RequestLobbyList(DerivedClass) bool DerivedClass::RequestLobbyList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryC2S_RequestLobbyList RequestLobbyList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryC2S_RequestLobbyList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestReturnToEntry;
		static const PNTCHAR* RmiName_RequestCreateNewGamer;
		static const PNTCHAR* RmiName_RequestFirstLogon;
		static const PNTCHAR* RmiName_RequestHeroSlots;
		static const PNTCHAR* RmiName_RequestSelectHero;
		static const PNTCHAR* RmiName_RequestAddHero;
		static const PNTCHAR* RmiName_RequestRemoveHero;
		static const PNTCHAR* RmiName_RequestLobbyList;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > RequestReturnToEntry_Function;
		virtual bool RequestReturnToEntry ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential) 
		{ 
			if (RequestReturnToEntry_Function==nullptr) 
				return true; 
			return RequestReturnToEntry_Function(remote,rmiContext, credential); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const String & ) > RequestCreateNewGamer_Function;
		virtual bool RequestCreateNewGamer ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & Password) 
		{ 
			if (RequestCreateNewGamer_Function==nullptr) 
				return true; 
			return RequestCreateNewGamer_Function(remote,rmiContext, gamerID, Password); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const String & , const String & ) > RequestFirstLogon_Function;
		virtual bool RequestFirstLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & gamerID, const String & gamerPassword) 
		{ 
			if (RequestFirstLogon_Function==nullptr) 
				return true; 
			return RequestFirstLogon_Function(remote,rmiContext, gamerID, gamerPassword); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestHeroSlots_Function;
		virtual bool RequestHeroSlots ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestHeroSlots_Function==nullptr) 
				return true; 
			return RequestHeroSlots_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > RequestSelectHero_Function;
		virtual bool RequestSelectHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) 
		{ 
			if (RequestSelectHero_Function==nullptr) 
				return true; 
			return RequestSelectHero_Function(remote,rmiContext, heroGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const int & ) > RequestAddHero_Function;
		virtual bool RequestAddHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const int & heroType) 
		{ 
			if (RequestAddHero_Function==nullptr) 
				return true; 
			return RequestAddHero_Function(remote,rmiContext, heroName, heroType); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > RequestRemoveHero_Function;
		virtual bool RequestRemoveHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) 
		{ 
			if (RequestRemoveHero_Function==nullptr) 
				return true; 
			return RequestRemoveHero_Function(remote,rmiContext, heroGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestLobbyList_Function;
		virtual bool RequestLobbyList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestLobbyList_Function==nullptr) 
				return true; 
			return RequestLobbyList_Function(remote,rmiContext); 
		}

	};
#endif

}


     
namespace EntryS2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool NotifyCreateNewGamerSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyCreateNewGamerSuccess bool NotifyCreateNewGamerSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyCreateNewGamerSuccess(DerivedClass) bool DerivedClass::NotifyCreateNewGamerSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid)
#define CALL_EntryS2C_NotifyCreateNewGamerSuccess NotifyCreateNewGamerSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid)
#define PARAM_EntryS2C_NotifyCreateNewGamerSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid)
               
		virtual bool NotifyCreateNewGamerFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyCreateNewGamerFailed bool NotifyCreateNewGamerFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyCreateNewGamerFailed(DerivedClass) bool DerivedClass::NotifyCreateNewGamerFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define CALL_EntryS2C_NotifyCreateNewGamerFailed NotifyCreateNewGamerFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define PARAM_EntryS2C_NotifyCreateNewGamerFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
               
		virtual bool NotifyUnauthedAccess ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyUnauthedAccess bool NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyUnauthedAccess(DerivedClass) bool DerivedClass::NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_NotifyUnauthedAccess NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool ShowError ( ::Proud::HostID, ::Proud::RmiContext& , const String & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_ShowError bool ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt) PN_OVERRIDE

#define DEFRMI_EntryS2C_ShowError(DerivedClass) bool DerivedClass::ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
#define CALL_EntryS2C_ShowError ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
#define PARAM_EntryS2C_ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
               
		virtual bool NotifyFirstLogonFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyFirstLogonFailed bool NotifyFirstLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyFirstLogonFailed(DerivedClass) bool DerivedClass::NotifyFirstLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define CALL_EntryS2C_NotifyFirstLogonFailed NotifyFirstLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define PARAM_EntryS2C_NotifyFirstLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
               
		virtual bool NotifyReturnToEntryFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyReturnToEntryFailed bool NotifyReturnToEntryFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyReturnToEntryFailed(DerivedClass) bool DerivedClass::NotifyReturnToEntryFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define CALL_EntryS2C_NotifyReturnToEntryFailed NotifyReturnToEntryFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define PARAM_EntryS2C_NotifyReturnToEntryFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
               
		virtual bool NotifyFirstLogonSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyFirstLogonSuccess bool NotifyFirstLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const Guid & credential) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyFirstLogonSuccess(DerivedClass) bool DerivedClass::NotifyFirstLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const Guid & credential)
#define CALL_EntryS2C_NotifyFirstLogonSuccess NotifyFirstLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const Guid & credential)
#define PARAM_EntryS2C_NotifyFirstLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const Guid & credential)
               
		virtual bool NotifySelectHeroFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifySelectHeroFailed bool NotifySelectHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifySelectHeroFailed(DerivedClass) bool DerivedClass::NotifySelectHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define CALL_EntryS2C_NotifySelectHeroFailed NotifySelectHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define PARAM_EntryS2C_NotifySelectHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
               
		virtual bool NotifySelectHeroSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifySelectHeroSuccess bool NotifySelectHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroname) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifySelectHeroSuccess(DerivedClass) bool DerivedClass::NotifySelectHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroname)
#define CALL_EntryS2C_NotifySelectHeroSuccess NotifySelectHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroname)
#define PARAM_EntryS2C_NotifySelectHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroname)
               
		virtual bool HeroList_Begin ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_HeroList_Begin bool HeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_HeroList_Begin(DerivedClass) bool DerivedClass::HeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_HeroList_Begin HeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_HeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool HeroList_Add ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const Guid & , const int & , const LONGLONG & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_HeroList_Add bool HeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid, const int & heroType, const LONGLONG & heroScore) PN_OVERRIDE

#define DEFRMI_EntryS2C_HeroList_Add(DerivedClass) bool DerivedClass::HeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid, const int & heroType, const LONGLONG & heroScore)
#define CALL_EntryS2C_HeroList_Add HeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid, const int & heroType, const LONGLONG & heroScore)
#define PARAM_EntryS2C_HeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid, const int & heroType, const LONGLONG & heroScore)
               
		virtual bool HeroList_End ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_HeroList_End bool HeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_HeroList_End(DerivedClass) bool DerivedClass::HeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_HeroList_End HeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_HeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RemovedHeroList_Begin ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_RemovedHeroList_Begin bool RemovedHeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_RemovedHeroList_Begin(DerivedClass) bool DerivedClass::RemovedHeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_RemovedHeroList_Begin RemovedHeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_RemovedHeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RemovedHeroList_Add ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_RemovedHeroList_Add bool RemovedHeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid) PN_OVERRIDE

#define DEFRMI_EntryS2C_RemovedHeroList_Add(DerivedClass) bool DerivedClass::RemovedHeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid)
#define CALL_EntryS2C_RemovedHeroList_Add RemovedHeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid)
#define PARAM_EntryS2C_RemovedHeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid)
               
		virtual bool RemovedHeroList_End ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_RemovedHeroList_End bool RemovedHeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_RemovedHeroList_End(DerivedClass) bool DerivedClass::RemovedHeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_RemovedHeroList_End RemovedHeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_RemovedHeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifySelectedHero ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifySelectedHero bool NotifySelectedHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifySelectedHero(DerivedClass) bool DerivedClass::NotifySelectedHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define CALL_EntryS2C_NotifySelectedHero NotifySelectedHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define PARAM_EntryS2C_NotifySelectedHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
               
		virtual bool NotifyAddHeroSuccess ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyAddHeroSuccess bool NotifyAddHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyAddHeroSuccess(DerivedClass) bool DerivedClass::NotifyAddHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_NotifyAddHeroSuccess NotifyAddHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_NotifyAddHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifyAddHeroFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyAddHeroFailed bool NotifyAddHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyAddHeroFailed(DerivedClass) bool DerivedClass::NotifyAddHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define CALL_EntryS2C_NotifyAddHeroFailed NotifyAddHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
#define PARAM_EntryS2C_NotifyAddHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason)
               
		virtual bool NotifyRemoveHeroSuccess ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_NotifyRemoveHeroSuccess bool NotifyRemoveHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_NotifyRemoveHeroSuccess(DerivedClass) bool DerivedClass::NotifyRemoveHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_NotifyRemoveHeroSuccess NotifyRemoveHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_NotifyRemoveHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool LobbyList_Begin ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_LobbyList_Begin bool LobbyList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_LobbyList_Begin(DerivedClass) bool DerivedClass::LobbyList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_LobbyList_Begin LobbyList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_LobbyList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool LobbyList_Add ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const NamedAddrPort & , const int & )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_LobbyList_Add bool LobbyList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & lobbyName, const NamedAddrPort & serverAddr, const int & gamerCount) PN_OVERRIDE

#define DEFRMI_EntryS2C_LobbyList_Add(DerivedClass) bool DerivedClass::LobbyList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & lobbyName, const NamedAddrPort & serverAddr, const int & gamerCount)
#define CALL_EntryS2C_LobbyList_Add LobbyList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & lobbyName, const NamedAddrPort & serverAddr, const int & gamerCount)
#define PARAM_EntryS2C_LobbyList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & lobbyName, const NamedAddrPort & serverAddr, const int & gamerCount)
               
		virtual bool LobbyList_End ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EntryS2C_LobbyList_End bool LobbyList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EntryS2C_LobbyList_End(DerivedClass) bool DerivedClass::LobbyList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EntryS2C_LobbyList_End LobbyList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EntryS2C_LobbyList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_NotifyCreateNewGamerSuccess;
		static const PNTCHAR* RmiName_NotifyCreateNewGamerFailed;
		static const PNTCHAR* RmiName_NotifyUnauthedAccess;
		static const PNTCHAR* RmiName_ShowError;
		static const PNTCHAR* RmiName_NotifyFirstLogonFailed;
		static const PNTCHAR* RmiName_NotifyReturnToEntryFailed;
		static const PNTCHAR* RmiName_NotifyFirstLogonSuccess;
		static const PNTCHAR* RmiName_NotifySelectHeroFailed;
		static const PNTCHAR* RmiName_NotifySelectHeroSuccess;
		static const PNTCHAR* RmiName_HeroList_Begin;
		static const PNTCHAR* RmiName_HeroList_Add;
		static const PNTCHAR* RmiName_HeroList_End;
		static const PNTCHAR* RmiName_RemovedHeroList_Begin;
		static const PNTCHAR* RmiName_RemovedHeroList_Add;
		static const PNTCHAR* RmiName_RemovedHeroList_End;
		static const PNTCHAR* RmiName_NotifySelectedHero;
		static const PNTCHAR* RmiName_NotifyAddHeroSuccess;
		static const PNTCHAR* RmiName_NotifyAddHeroFailed;
		static const PNTCHAR* RmiName_NotifyRemoveHeroSuccess;
		static const PNTCHAR* RmiName_LobbyList_Begin;
		static const PNTCHAR* RmiName_LobbyList_Add;
		static const PNTCHAR* RmiName_LobbyList_End;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > NotifyCreateNewGamerSuccess_Function;
		virtual bool NotifyCreateNewGamerSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid) 
		{ 
			if (NotifyCreateNewGamerSuccess_Function==nullptr) 
				return true; 
			return NotifyCreateNewGamerSuccess_Function(remote,rmiContext, Gamerguid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int & ) > NotifyCreateNewGamerFailed_Function;
		virtual bool NotifyCreateNewGamerFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) 
		{ 
			if (NotifyCreateNewGamerFailed_Function==nullptr) 
				return true; 
			return NotifyCreateNewGamerFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyUnauthedAccess_Function;
		virtual bool NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyUnauthedAccess_Function==nullptr) 
				return true; 
			return NotifyUnauthedAccess_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const String & ) > ShowError_Function;
		virtual bool ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt) 
		{ 
			if (ShowError_Function==nullptr) 
				return true; 
			return ShowError_Function(remote,rmiContext, errTxt); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int & ) > NotifyFirstLogonFailed_Function;
		virtual bool NotifyFirstLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) 
		{ 
			if (NotifyFirstLogonFailed_Function==nullptr) 
				return true; 
			return NotifyFirstLogonFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int & ) > NotifyReturnToEntryFailed_Function;
		virtual bool NotifyReturnToEntryFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) 
		{ 
			if (NotifyReturnToEntryFailed_Function==nullptr) 
				return true; 
			return NotifyReturnToEntryFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const Guid & ) > NotifyFirstLogonSuccess_Function;
		virtual bool NotifyFirstLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const Guid & credential) 
		{ 
			if (NotifyFirstLogonSuccess_Function==nullptr) 
				return true; 
			return NotifyFirstLogonSuccess_Function(remote,rmiContext, Gamerguid, credential); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int & ) > NotifySelectHeroFailed_Function;
		virtual bool NotifySelectHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) 
		{ 
			if (NotifySelectHeroFailed_Function==nullptr) 
				return true; 
			return NotifySelectHeroFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & ) > NotifySelectHeroSuccess_Function;
		virtual bool NotifySelectHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroname) 
		{ 
			if (NotifySelectHeroSuccess_Function==nullptr) 
				return true; 
			return NotifySelectHeroSuccess_Function(remote,rmiContext, heroname); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > HeroList_Begin_Function;
		virtual bool HeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (HeroList_Begin_Function==nullptr) 
				return true; 
			return HeroList_Begin_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const Guid & , const int & , const LONGLONG & ) > HeroList_Add_Function;
		virtual bool HeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid, const int & heroType, const LONGLONG & heroScore) 
		{ 
			if (HeroList_Add_Function==nullptr) 
				return true; 
			return HeroList_Add_Function(remote,rmiContext, heroName, heroGuid, heroType, heroScore); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > HeroList_End_Function;
		virtual bool HeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (HeroList_End_Function==nullptr) 
				return true; 
			return HeroList_End_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RemovedHeroList_Begin_Function;
		virtual bool RemovedHeroList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RemovedHeroList_Begin_Function==nullptr) 
				return true; 
			return RemovedHeroList_Begin_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const Guid & ) > RemovedHeroList_Add_Function;
		virtual bool RemovedHeroList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & heroName, const Guid & heroGuid) 
		{ 
			if (RemovedHeroList_Add_Function==nullptr) 
				return true; 
			return RemovedHeroList_Add_Function(remote,rmiContext, heroName, heroGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RemovedHeroList_End_Function;
		virtual bool RemovedHeroList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RemovedHeroList_End_Function==nullptr) 
				return true; 
			return RemovedHeroList_End_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > NotifySelectedHero_Function;
		virtual bool NotifySelectedHero ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) 
		{ 
			if (NotifySelectedHero_Function==nullptr) 
				return true; 
			return NotifySelectedHero_Function(remote,rmiContext, heroGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyAddHeroSuccess_Function;
		virtual bool NotifyAddHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyAddHeroSuccess_Function==nullptr) 
				return true; 
			return NotifyAddHeroSuccess_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int & ) > NotifyAddHeroFailed_Function;
		virtual bool NotifyAddHeroFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & reason) 
		{ 
			if (NotifyAddHeroFailed_Function==nullptr) 
				return true; 
			return NotifyAddHeroFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyRemoveHeroSuccess_Function;
		virtual bool NotifyRemoveHeroSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyRemoveHeroSuccess_Function==nullptr) 
				return true; 
			return NotifyRemoveHeroSuccess_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > LobbyList_Begin_Function;
		virtual bool LobbyList_Begin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (LobbyList_Begin_Function==nullptr) 
				return true; 
			return LobbyList_Begin_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & , const NamedAddrPort & , const int & ) > LobbyList_Add_Function;
		virtual bool LobbyList_Add ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & lobbyName, const NamedAddrPort & serverAddr, const int & gamerCount) 
		{ 
			if (LobbyList_Add_Function==nullptr) 
				return true; 
			return LobbyList_Add_Function(remote,rmiContext, lobbyName, serverAddr, gamerCount); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > LobbyList_End_Function;
		virtual bool LobbyList_End ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (LobbyList_End_Function==nullptr) 
				return true; 
			return LobbyList_End_Function(remote,rmiContext); 
		}

	};
#endif

}


