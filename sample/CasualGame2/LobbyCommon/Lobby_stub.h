  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "Lobby_common.h"

     
namespace LobbyC2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestNextLogon ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_LobbyC2S_RequestNextLogon bool RequestNextLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential) PN_OVERRIDE

#define DEFRMI_LobbyC2S_RequestNextLogon(DerivedClass) bool DerivedClass::RequestNextLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
#define CALL_LobbyC2S_RequestNextLogon RequestNextLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
#define PARAM_LobbyC2S_RequestNextLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential)
               
		virtual bool NotifyChannelFormReady ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_LobbyC2S_NotifyChannelFormReady bool NotifyChannelFormReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_LobbyC2S_NotifyChannelFormReady(DerivedClass) bool DerivedClass::NotifyChannelFormReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_LobbyC2S_NotifyChannelFormReady NotifyChannelFormReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_LobbyC2S_NotifyChannelFormReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool Chat ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & )		{ 
			return false;
		} 

#define DECRMI_LobbyC2S_Chat bool Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & chatText) PN_OVERRIDE

#define DEFRMI_LobbyC2S_Chat(DerivedClass) bool DerivedClass::Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & chatText)
#define CALL_LobbyC2S_Chat Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & chatText)
#define PARAM_LobbyC2S_Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & chatText)
               
		virtual bool RequestCreateGameRoom ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyC2S_RequestCreateGameRoom bool RequestCreateGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & gameRoomParam) PN_OVERRIDE

#define DEFRMI_LobbyC2S_RequestCreateGameRoom(DerivedClass) bool DerivedClass::RequestCreateGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & gameRoomParam)
#define CALL_LobbyC2S_RequestCreateGameRoom RequestCreateGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & gameRoomParam)
#define PARAM_LobbyC2S_RequestCreateGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & gameRoomParam)
               
		virtual bool RequestJoinGameRoom ( ::Proud::HostID, ::Proud::RmiContext& , const CJoinGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyC2S_RequestJoinGameRoom bool RequestJoinGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CJoinGameRoomParameter & param) PN_OVERRIDE

#define DEFRMI_LobbyC2S_RequestJoinGameRoom(DerivedClass) bool DerivedClass::RequestJoinGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CJoinGameRoomParameter & param)
#define CALL_LobbyC2S_RequestJoinGameRoom RequestJoinGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CJoinGameRoomParameter & param)
#define PARAM_LobbyC2S_RequestJoinGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CJoinGameRoomParameter & param)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestNextLogon;
		static const PNTCHAR* RmiName_NotifyChannelFormReady;
		static const PNTCHAR* RmiName_Chat;
		static const PNTCHAR* RmiName_RequestCreateGameRoom;
		static const PNTCHAR* RmiName_RequestJoinGameRoom;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > RequestNextLogon_Function;
		virtual bool RequestNextLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & credential) 
		{ 
			if (RequestNextLogon_Function==nullptr) 
				return true; 
			return RequestNextLogon_Function(remote,rmiContext, credential); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyChannelFormReady_Function;
		virtual bool NotifyChannelFormReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyChannelFormReady_Function==nullptr) 
				return true; 
			return NotifyChannelFormReady_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CStringW & ) > Chat_Function;
		virtual bool Chat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CStringW & chatText) 
		{ 
			if (Chat_Function==nullptr) 
				return true; 
			return Chat_Function(remote,rmiContext, chatText); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & ) > RequestCreateGameRoom_Function;
		virtual bool RequestCreateGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & gameRoomParam) 
		{ 
			if (RequestCreateGameRoom_Function==nullptr) 
				return true; 
			return RequestCreateGameRoom_Function(remote,rmiContext, gameRoomParam); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CJoinGameRoomParameter & ) > RequestJoinGameRoom_Function;
		virtual bool RequestJoinGameRoom ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CJoinGameRoomParameter & param) 
		{ 
			if (RequestJoinGameRoom_Function==nullptr) 
				return true; 
			return RequestJoinGameRoom_Function(remote,rmiContext, param); 
		}

	};
#endif

}


     
namespace LobbyS2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool NotifyUnauthedAccess ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyUnauthedAccess bool NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyUnauthedAccess(DerivedClass) bool DerivedClass::NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_LobbyS2C_NotifyUnauthedAccess NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_LobbyS2C_NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool ShowError ( ::Proud::HostID, ::Proud::RmiContext& , const String & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_ShowError bool ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt) PN_OVERRIDE

#define DEFRMI_LobbyS2C_ShowError(DerivedClass) bool DerivedClass::ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
#define CALL_LobbyS2C_ShowError ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
#define PARAM_LobbyS2C_ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt)
               
		virtual bool NotifyNextLogonFailed ( ::Proud::HostID, ::Proud::RmiContext& , const ErrorType & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyNextLogonFailed bool NotifyNextLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const ErrorType & reason) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyNextLogonFailed(DerivedClass) bool DerivedClass::NotifyNextLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const ErrorType & reason)
#define CALL_LobbyS2C_NotifyNextLogonFailed NotifyNextLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const ErrorType & reason)
#define PARAM_LobbyS2C_NotifyNextLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const ErrorType & reason)
               
		virtual bool NotifyNextLogonSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const CHeroPublishInfo & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyNextLogonSuccess bool NotifyNextLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const CHeroPublishInfo & selectedHeroInfo) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyNextLogonSuccess(DerivedClass) bool DerivedClass::NotifyNextLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const CHeroPublishInfo & selectedHeroInfo)
#define CALL_LobbyS2C_NotifyNextLogonSuccess NotifyNextLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const CHeroPublishInfo & selectedHeroInfo)
#define PARAM_LobbyS2C_NotifyNextLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const CHeroPublishInfo & selectedHeroInfo)
               
		virtual bool HeroSlot_Appear ( ::Proud::HostID, ::Proud::RmiContext& , const CHeroPublishInfo & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_HeroSlot_Appear bool HeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_HeroSlot_Appear(DerivedClass) bool DerivedClass::HeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
#define CALL_LobbyS2C_HeroSlot_Appear HeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
#define PARAM_LobbyS2C_HeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
               
		virtual bool HeroSlot_Disappear ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_HeroSlot_Disappear bool HeroSlot_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) PN_OVERRIDE

#define DEFRMI_LobbyS2C_HeroSlot_Disappear(DerivedClass) bool DerivedClass::HeroSlot_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define CALL_LobbyS2C_HeroSlot_Disappear HeroSlot_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
#define PARAM_LobbyS2C_HeroSlot_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid)
               
		virtual bool GameRoom_Appear ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_GameRoom_Appear bool GameRoom_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_GameRoom_Appear(DerivedClass) bool DerivedClass::GameRoom_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define CALL_LobbyS2C_GameRoom_Appear GameRoom_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define PARAM_LobbyS2C_GameRoom_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
               
		virtual bool GameRoom_ShowState ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_GameRoom_ShowState bool GameRoom_ShowState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_GameRoom_ShowState(DerivedClass) bool DerivedClass::GameRoom_ShowState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define CALL_LobbyS2C_GameRoom_ShowState GameRoom_ShowState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define PARAM_LobbyS2C_GameRoom_ShowState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
               
		virtual bool GameRoom_Disappear ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_GameRoom_Disappear bool GameRoom_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & roomGuid) PN_OVERRIDE

#define DEFRMI_LobbyS2C_GameRoom_Disappear(DerivedClass) bool DerivedClass::GameRoom_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & roomGuid)
#define CALL_LobbyS2C_GameRoom_Disappear GameRoom_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & roomGuid)
#define PARAM_LobbyS2C_GameRoom_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & roomGuid)
               
		virtual bool LocalHeroSlot_Appear ( ::Proud::HostID, ::Proud::RmiContext& , const CHeroPublishInfo & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_LocalHeroSlot_Appear bool LocalHeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_LocalHeroSlot_Appear(DerivedClass) bool DerivedClass::LocalHeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
#define CALL_LobbyS2C_LocalHeroSlot_Appear LocalHeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
#define PARAM_LobbyS2C_LocalHeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info)
               
		virtual bool ShowChat ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const CStringW & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_ShowChat bool ShowChat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid, const CStringW & chatText) PN_OVERRIDE

#define DEFRMI_LobbyS2C_ShowChat(DerivedClass) bool DerivedClass::ShowChat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid, const CStringW & chatText)
#define CALL_LobbyS2C_ShowChat ShowChat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid, const CStringW & chatText)
#define PARAM_LobbyS2C_ShowChat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid, const CStringW & chatText)
               
		virtual bool NotifyCreateRoomFailed ( ::Proud::HostID, ::Proud::RmiContext& , const CasualResult & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyCreateRoomFailed bool NotifyCreateRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyCreateRoomFailed(DerivedClass) bool DerivedClass::NotifyCreateRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
#define CALL_LobbyS2C_NotifyCreateRoomFailed NotifyCreateRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
#define PARAM_LobbyS2C_NotifyCreateRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
               
		virtual bool NotifyCreateRoomSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyCreateRoomSuccess bool NotifyCreateRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyCreateRoomSuccess(DerivedClass) bool DerivedClass::NotifyCreateRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define CALL_LobbyS2C_NotifyCreateRoomSuccess NotifyCreateRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define PARAM_LobbyS2C_NotifyCreateRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
               
		virtual bool NotifyJoinRoomFailed ( ::Proud::HostID, ::Proud::RmiContext& , const CasualResult & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyJoinRoomFailed bool NotifyJoinRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyJoinRoomFailed(DerivedClass) bool DerivedClass::NotifyJoinRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
#define CALL_LobbyS2C_NotifyJoinRoomFailed NotifyJoinRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
#define PARAM_LobbyS2C_NotifyJoinRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason)
               
		virtual bool NotifyJoinRoomSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & )		{ 
			return false;
		} 

#define DECRMI_LobbyS2C_NotifyJoinRoomSuccess bool NotifyJoinRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) PN_OVERRIDE

#define DEFRMI_LobbyS2C_NotifyJoinRoomSuccess(DerivedClass) bool DerivedClass::NotifyJoinRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define CALL_LobbyS2C_NotifyJoinRoomSuccess NotifyJoinRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
#define PARAM_LobbyS2C_NotifyJoinRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_NotifyUnauthedAccess;
		static const PNTCHAR* RmiName_ShowError;
		static const PNTCHAR* RmiName_NotifyNextLogonFailed;
		static const PNTCHAR* RmiName_NotifyNextLogonSuccess;
		static const PNTCHAR* RmiName_HeroSlot_Appear;
		static const PNTCHAR* RmiName_HeroSlot_Disappear;
		static const PNTCHAR* RmiName_GameRoom_Appear;
		static const PNTCHAR* RmiName_GameRoom_ShowState;
		static const PNTCHAR* RmiName_GameRoom_Disappear;
		static const PNTCHAR* RmiName_LocalHeroSlot_Appear;
		static const PNTCHAR* RmiName_ShowChat;
		static const PNTCHAR* RmiName_NotifyCreateRoomFailed;
		static const PNTCHAR* RmiName_NotifyCreateRoomSuccess;
		static const PNTCHAR* RmiName_NotifyJoinRoomFailed;
		static const PNTCHAR* RmiName_NotifyJoinRoomSuccess;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyUnauthedAccess_Function;
		virtual bool NotifyUnauthedAccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyUnauthedAccess_Function==nullptr) 
				return true; 
			return NotifyUnauthedAccess_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const String & ) > ShowError_Function;
		virtual bool ShowError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const String & errTxt) 
		{ 
			if (ShowError_Function==nullptr) 
				return true; 
			return ShowError_Function(remote,rmiContext, errTxt); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const ErrorType & ) > NotifyNextLogonFailed_Function;
		virtual bool NotifyNextLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const ErrorType & reason) 
		{ 
			if (NotifyNextLogonFailed_Function==nullptr) 
				return true; 
			return NotifyNextLogonFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const CHeroPublishInfo & ) > NotifyNextLogonSuccess_Function;
		virtual bool NotifyNextLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & Gamerguid, const CHeroPublishInfo & selectedHeroInfo) 
		{ 
			if (NotifyNextLogonSuccess_Function==nullptr) 
				return true; 
			return NotifyNextLogonSuccess_Function(remote,rmiContext, Gamerguid, selectedHeroInfo); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CHeroPublishInfo & ) > HeroSlot_Appear_Function;
		virtual bool HeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info) 
		{ 
			if (HeroSlot_Appear_Function==nullptr) 
				return true; 
			return HeroSlot_Appear_Function(remote,rmiContext, info); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > HeroSlot_Disappear_Function;
		virtual bool HeroSlot_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid) 
		{ 
			if (HeroSlot_Disappear_Function==nullptr) 
				return true; 
			return HeroSlot_Disappear_Function(remote,rmiContext, heroGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & ) > GameRoom_Appear_Function;
		virtual bool GameRoom_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) 
		{ 
			if (GameRoom_Appear_Function==nullptr) 
				return true; 
			return GameRoom_Appear_Function(remote,rmiContext, info); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & ) > GameRoom_ShowState_Function;
		virtual bool GameRoom_ShowState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) 
		{ 
			if (GameRoom_ShowState_Function==nullptr) 
				return true; 
			return GameRoom_ShowState_Function(remote,rmiContext, info); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & ) > GameRoom_Disappear_Function;
		virtual bool GameRoom_Disappear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & roomGuid) 
		{ 
			if (GameRoom_Disappear_Function==nullptr) 
				return true; 
			return GameRoom_Disappear_Function(remote,rmiContext, roomGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CHeroPublishInfo & ) > LocalHeroSlot_Appear_Function;
		virtual bool LocalHeroSlot_Appear ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CHeroPublishInfo & info) 
		{ 
			if (LocalHeroSlot_Appear_Function==nullptr) 
				return true; 
			return LocalHeroSlot_Appear_Function(remote,rmiContext, info); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Guid & , const CStringW & ) > ShowChat_Function;
		virtual bool ShowChat ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Guid & heroGuid, const CStringW & chatText) 
		{ 
			if (ShowChat_Function==nullptr) 
				return true; 
			return ShowChat_Function(remote,rmiContext, heroGuid, chatText); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CasualResult & ) > NotifyCreateRoomFailed_Function;
		virtual bool NotifyCreateRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason) 
		{ 
			if (NotifyCreateRoomFailed_Function==nullptr) 
				return true; 
			return NotifyCreateRoomFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & ) > NotifyCreateRoomSuccess_Function;
		virtual bool NotifyCreateRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) 
		{ 
			if (NotifyCreateRoomSuccess_Function==nullptr) 
				return true; 
			return NotifyCreateRoomSuccess_Function(remote,rmiContext, info); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CasualResult & ) > NotifyJoinRoomFailed_Function;
		virtual bool NotifyJoinRoomFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CasualResult & reason) 
		{ 
			if (NotifyJoinRoomFailed_Function==nullptr) 
				return true; 
			return NotifyJoinRoomFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const CGameRoomParameter & ) > NotifyJoinRoomSuccess_Function;
		virtual bool NotifyJoinRoomSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const CGameRoomParameter & info) 
		{ 
			if (NotifyJoinRoomSuccess_Function==nullptr) 
				return true; 
			return NotifyJoinRoomSuccess_Function(remote,rmiContext, info); 
		}

	};
#endif

}


