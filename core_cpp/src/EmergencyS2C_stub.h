  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "EmergencyS2C_common.h"

     
namespace EmergencyS2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool EmergencyLogData_AckComplete ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_EmergencyS2C_EmergencyLogData_AckComplete bool EmergencyLogData_AckComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_EmergencyS2C_EmergencyLogData_AckComplete(DerivedClass) bool DerivedClass::EmergencyLogData_AckComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_EmergencyS2C_EmergencyLogData_AckComplete EmergencyLogData_AckComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_EmergencyS2C_EmergencyLogData_AckComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_EmergencyLogData_AckComplete;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > EmergencyLogData_AckComplete_Function;
		virtual bool EmergencyLogData_AckComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (EmergencyLogData_AckComplete_Function==nullptr) 
				return true; 
			return EmergencyLogData_AckComplete_Function(remote,rmiContext); 
		}

	};
#endif

}


