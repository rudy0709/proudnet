/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_nettention_proud_NetClient */

#ifndef _Included_com_nettention_proud_NetClient
#define _Included_com_nettention_proud_NetClient
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_nettention_proud_NetClient
 * Method:    createNativeInstance
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_nettention_proud_NetClient_createNativeInstance
  (JNIEnv *, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    destroyNativeInstance
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_destroyNativeInstance
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeFrameMove
 * Signature: (JLcom/nettention/proud/FrameMoveResult;)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeFrameMove
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetLocalHostID
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_nettention_proud_NetClient_nativeGetLocalHostID
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeAttachProxy
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeAttachProxy
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeDetachProxy
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeDetachProxy
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeAttachStub
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeAttachStub
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeDetachStub
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeDetachStub
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeSetEventSink
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeSetEventSink
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeConnect
 * Signature: (JLcom/nettention/proud/NetConnectionParam;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_nativeConnect
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeDisconnect
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeDisconnect
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeDisconnectA
 * Signature: (JDLcom/nettention/proud/ByteArray;)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeDisconnectA
  (JNIEnv *, jobject, jlong, jdouble, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetDirectP2PInfo
 * Signature: (JILcom/nettention/proud/DirectP2PInfo;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_nativeGetDirectP2PInfo
  (JNIEnv *, jobject, jlong, jint, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetGroupMembers
 * Signature: (JILcom/nettention/proud/HostIDArray;)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeGetGroupMembers
  (JNIEnv *, jobject, jlong, jint, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetIndirectServerTime
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetIndirectServerTime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetInternalVersion
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_nettention_proud_NetClient_nativeGetInternalVersion
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetLastPingMilisec
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_nettention_proud_NetClient_nativeGetLastPingMilisec
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetLastPingSec
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetLastPingSec
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetLocalJoinedP2PGroups
 * Signature: (JLcom/nettention/proud/HostIDArray;)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeGetLocalJoinedP2PGroups
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetMessageMaxLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_nettention_proud_NetClient_nativeGetMessageMaxLength
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetNatDeviceName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_nettention_proud_NetClient_nativeGetNatDeviceName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetP2PServerTime
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetP2PServerTime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetPeerInfo
 * Signature: (JILcom/nettention/proud/NetPeerInfo;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_nativeGetPeerInfo
  (JNIEnv *, jobject, jlong, jint, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetPeerReliableUdpStats
 * Signature: (JILcom/nettention/proud/ReliableUdpHostStats;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_nativeGetPeerReliableUdpStats
  (JNIEnv *, jobject, jlong, jint, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetRecentPingMilisec
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_nettention_proud_NetClient_nativeGetRecentPingMilisec
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetRecentPingSec
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetRecentPingSec
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetSendToServerSpeed
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetSendToServerSpeed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetServerConnectionState
 * Signature: (JLcom/nettention/proud/ServerConnectionState;)Lcom/nettention/proud/ConnectionState;
 */
JNIEXPORT jobject JNICALL Java_com_nettention_proud_NetClient_nativeGetServerConnectionState
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetServerTime
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetServerTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetServerTimeDiff
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_nettention_proud_NetClient_nativeGetServerTimeDiff
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeGetStats
 * Signature: (JLcom/nettention/proud/NetClientStats;)V
 */
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeGetStats
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    nativeHasServerConnection
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_nativeHasServerConnection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_nettention_proud_NetClient
 * Method:    natvieInvalidateUdpSocket
 * Signature: (JILcom/nettention/proud/DirectP2PInfo;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_nettention_proud_NetClient_natvieInvalidateUdpSocket
  (JNIEnv *, jobject, jlong, jint, jobject);
/*
* Class:     com_nettention_proud_NetClient
* Method:    nativeSetUseNetworkerThread
* Signature: (JZ)V
*/
JNIEXPORT void JNICALL Java_com_nettention_proud_NetClient_nativeSetUseNetworkerThread
	(JNIEnv *, jobject , jlong , jboolean);

#ifdef __cplusplus
}
#endif
#endif
