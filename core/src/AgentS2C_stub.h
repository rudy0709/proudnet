  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "AgentS2C_common.h"

     
namespace AgentS2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool NotifyCredential ( ::Proud::HostID, ::Proud::RmiContext& , const bool & )		{ 
			return false;
		} 

#define DECRMI_AgentS2C_NotifyCredential bool NotifyCredential ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & authentication) PN_OVERRIDE

#define DEFRMI_AgentS2C_NotifyCredential(DerivedClass) bool DerivedClass::NotifyCredential ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & authentication)
#define CALL_AgentS2C_NotifyCredential NotifyCredential ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & authentication)
#define PARAM_AgentS2C_NotifyCredential ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & authentication)
               
		virtual bool RequestServerAppStop ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_AgentS2C_RequestServerAppStop bool RequestServerAppStop ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_AgentS2C_RequestServerAppStop(DerivedClass) bool DerivedClass::RequestServerAppStop ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_AgentS2C_RequestServerAppStop RequestServerAppStop ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_AgentS2C_RequestServerAppStop ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_NotifyCredential;
		static const PNTCHAR* RmiName_RequestServerAppStop;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const bool & ) > NotifyCredential_Function;
		virtual bool NotifyCredential ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & authentication) 
		{ 
			if (NotifyCredential_Function==nullptr) 
				return true; 
			return NotifyCredential_Function(remote,rmiContext, authentication); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestServerAppStop_Function;
		virtual bool RequestServerAppStop ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestServerAppStop_Function==nullptr) 
				return true; 
			return RequestServerAppStop_Function(remote,rmiContext); 
		}

	};
#endif

}


