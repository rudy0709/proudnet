//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Nettention.Proud {

public class ProudNetClientPlugin {
  public static MessagePriority MessagePriority_Holepunch {
    get {
      MessagePriority ret = (MessagePriority)ProudNetClientPluginPINVOKE.MessagePriority_Holepunch_get();
      if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static int CompareHostID(HostID lhs, HostID rhs) {
    int ret = ProudNetClientPluginPINVOKE.CompareHostID((int)lhs, (int)rhs);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string ToString(LogCategory logCategory) {
    string ret = ProudNetClientPluginPINVOKE.ToString((int)logCategory);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int PN_IPV6_ADDR_LENGTH {
    get {
      int ret = ProudNetClientPluginPINVOKE.PN_IPV6_ADDR_LENGTH_get();
      if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static int InvalidSocket {
    get {
      int ret = ProudNetClientPluginPINVOKE.InvalidSocket_get();
      if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static global::System.IntPtr NativeToNetClientEventWrap_New() { return ProudNetClientPluginPINVOKE.NativeToNetClientEventWrap_New(); }

  public static void NativeToNetClientEventWrap_Delete(global::System.IntPtr eventWrap) {
    ProudNetClientPluginPINVOKE.NativeToNetClientEventWrap_Delete(eventWrap);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static global::System.IntPtr NativeToRmiStubWrap_New() { return ProudNetClientPluginPINVOKE.NativeToRmiStubWrap_New(); }

  public static void NativeToRmiStubWrap_Delete(global::System.IntPtr stubWrap) {
    ProudNetClientPluginPINVOKE.NativeToRmiStubWrap_Delete(stubWrap);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static global::System.IntPtr NativeToRmiProxyWrap_New() { return ProudNetClientPluginPINVOKE.NativeToRmiProxyWrap_New(); }

  public static void NativeToRmiProxyWrap_Delete(global::System.IntPtr proxyWrap) {
    ProudNetClientPluginPINVOKE.NativeToRmiProxyWrap_Delete(proxyWrap);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static global::System.IntPtr NativeToRmiContext_New() { return ProudNetClientPluginPINVOKE.NativeToRmiContext_New(); }

  public static void NativeToRmiContext_Delete(global::System.IntPtr args) {
    ProudNetClientPluginPINVOKE.NativeToRmiContext_Delete(args);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void ChangeErrorReactionTypeToDebugOutputTypeWhenUnityEngine() {
    ProudNetClientPluginPINVOKE.ChangeErrorReactionTypeToDebugOutputTypeWhenUnityEngine();
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCSharpHandle(global::System.IntPtr obj1, global::System.IntPtr obj2) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCSharpHandle(obj1, obj2);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackJoinServerComplete(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_8 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackJoinServerComplete(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackLeaveServer(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackLeaveServer(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackP2PMemberJoin(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_9 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackP2PMemberJoin(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackP2PMemberLeave(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_10 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackP2PMemberLeave(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackChangeP2PRelayState(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_11 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackChangeP2PRelayState(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackChangeServerUdpState(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_12 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackChangeServerUdpState(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackSynchronizeServerTime(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_5 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackSynchronizeServerTime(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackError(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackError(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackWarning(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackWarning(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackInformation(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackInformation(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackException(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_3 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackException(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackServerOffline(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackServerOffline(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackServerOnline(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackServerOnline(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackP2PMemberOffline(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackP2PMemberOffline(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackP2PMemberOnline(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_0 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackP2PMemberOnline(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackNoRmiProcessed(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_12 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackNoRmiProcessed(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void NetClientEvent_SetCallbackReceiveUserMessage(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_7 callback) {
    ProudNetClientPluginPINVOKE.NetClientEvent_SetCallbackReceiveUserMessage(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiContext_SetHostTag(NativeRmiContext context, long value) {
    ProudNetClientPluginPINVOKE.RmiContext_SetHostTag(NativeRmiContext.getCPtr(context), value);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static global::System.IntPtr ReceivedMessage_GetRemoteAddress(global::System.IntPtr obj) { return ProudNetClientPluginPINVOKE.ReceivedMessage_GetRemoteAddress(obj); }

  public static long RmiContext_GetHostTag(global::System.IntPtr obj) {
    long ret = ProudNetClientPluginPINVOKE.RmiContext_GetHostTag(obj);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int AddrPort_GetAddrSize() {
    int ret = ProudNetClientPluginPINVOKE.AddrPort_GetAddrSize();
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void RmiStub_SetCSharpHandle(global::System.IntPtr obj1, global::System.IntPtr obj2) {
    ProudNetClientPluginPINVOKE.RmiStub_SetCSharpHandle(obj1, obj2);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiStub_SetCallbackGetRmiIDList(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_6 callback) {
    ProudNetClientPluginPINVOKE.RmiStub_SetCallbackGetRmiIDList(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiStub_SetCallbackGetRmiIDListCount(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_1 callback) {
    ProudNetClientPluginPINVOKE.RmiStub_SetCallbackGetRmiIDListCount(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiStub_SetCallbackProcessReceivedMessage(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_4 callback) {
    ProudNetClientPluginPINVOKE.RmiStub_SetCallbackProcessReceivedMessage(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiProxy_SetCSharpHandle(global::System.IntPtr obj1, global::System.IntPtr obj2) {
    ProudNetClientPluginPINVOKE.RmiProxy_SetCSharpHandle(obj1, obj2);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiProxy_SetCallbackGetRmiIDList(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_6 callback) {
    ProudNetClientPluginPINVOKE.RmiProxy_SetCallbackGetRmiIDList(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void RmiProxy_SetCallbackGetRmiIDListCount(global::System.IntPtr obj, Nettention.Proud.ProudDelegate.Delegate_1 callback) {
    ProudNetClientPluginPINVOKE.RmiProxy_SetCallbackGetRmiIDListCount(obj, callback);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool RmiProxy_RmiSend(global::System.IntPtr obj1, global::System.IntPtr remotes, int remoteCount, NativeRmiContext context, global::System.IntPtr data, int dataLength, string RMIName, int RMIId) {
    bool ret = ProudNetClientPluginPINVOKE.RmiProxy_RmiSend(obj1, remotes, remoteCount, NativeRmiContext.getCPtr(context), data, dataLength, RMIName, RMIId);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static global::System.IntPtr ByteArrayToNative(global::System.IntPtr data, int dataLength) { return ProudNetClientPluginPINVOKE.ByteArrayToNative(data, dataLength); }

  public static void CopyManagedByteArrayToNativeByteArray(global::System.IntPtr data, int dataLength, global::System.IntPtr nativeData) {
    ProudNetClientPluginPINVOKE.CopyManagedByteArrayToNativeByteArray(data, dataLength, nativeData);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static int ByteArray_GetCount(global::System.IntPtr obj) {
    int ret = ProudNetClientPluginPINVOKE.ByteArray_GetCount(obj);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void CopyNativeByteArrayToManageByteArray(global::System.IntPtr dst, global::System.IntPtr obj) {
    ProudNetClientPluginPINVOKE.CopyNativeByteArrayToManageByteArray__SWIG_0(dst, obj);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void CopyNativeByteArrayToManageByteArray(global::System.IntPtr dst, global::System.IntPtr src, int length) {
    ProudNetClientPluginPINVOKE.CopyNativeByteArrayToManageByteArray__SWIG_1(dst, src, length);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string ConvertNatvieStringToManagedString(global::System.IntPtr obj) {
    string ret = ProudNetClientPluginPINVOKE.ConvertNatvieStringToManagedString(obj);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void CopyNativeAddrToManagedAddr(global::System.IntPtr dst, global::System.IntPtr src, int length) {
    ProudNetClientPluginPINVOKE.CopyNativeAddrToManagedAddr(dst, src, length);
    if (ProudNetClientPluginPINVOKE.SWIGPendingException.Pending) throw ProudNetClientPluginPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
