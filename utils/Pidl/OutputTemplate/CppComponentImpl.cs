// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace PIDL
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class CppComponentImpl : CppComponentImplBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n// Generated by PIDL compiler.\r\n// Do not modify this file, but modify the sour" +
                    "ce .pidl file.\r\n\r\n#pragma once\r\n\r\n");
            
            #line 12 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
foreach(var c in App.g_parsed.m_components) { 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 14 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetNamespaceStartStatement()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t");
            
            #line 16 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("::");
            
            #line 16 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("()\r\n\t{\r\n\t\t// do nothing. Just for your easier debugging.\r\n\t}\r\n\r\n\t");
            
            #line 21 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("::~");
            
            #line 21 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("()\r\n\t{\r\n\t\t// do nothing. Just for your easier debugging.\r\n\t}\r\n\r\n\tconst Guid ");
            
            #line 26 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("::TypeID(");
            
            #line 26 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetTypeID()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n\tvoid ");
            
            #line 28 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("::SerializeMembers(CMessage& __data)\r\n\t{\r\n\t\t__data << (int)");
            
            #line 30 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.m_fields.Count));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 31 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 foreach(var f in c.m_fields) { 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t__data << \"");
            
            #line 32 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write("\"; // 필드이름\r\n\t\t__data << typeid(");
            
            #line 33 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write(").name(); // 필드타입\r\n\t\t__data << ");
            
            #line 34 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write("; // 필드값\r\n");
            
            #line 35 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n\tbool ");
            
            #line 38 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write(@"::DeserializeMembers(CMessage& __data)
	{
		int __fieldCount;
		__data >> __fieldCount;

		std::string __fieldName;
		std::string __fieldType;

		for (int __i = 0; __i < __fieldCount; __i++)
		{
			__data >> __fieldName;
			__data >> __fieldType;

			if(0) {} // 의미없음
");
            
            #line 52 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 foreach(var f in c.m_fields) { 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t\telse if (__fieldName == \"");
            
            #line 53 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write("\")\r\n\t\t\t{\r\n\t\t\t\tif (__fieldType != typeid(");
            
            #line 55 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write(").name())\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t__data >> ");
            
            #line 57 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t}\r\n");
            
            #line 59 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvoid ");
            
            #line 65 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetClassNameOnly()));
            
            #line default
            #line hidden
            this.Write("::AppendChanged_FieldOnly(ComponentAsStringMap& __change_component, ComponentAsSt" +
                    "ringMap& __lastState_component)\r\n\t{\r\n");
            
            #line 67 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"

		foreach(var f in c.m_fields){
		if(!f.m_attrList.m_attrMap.ContainsKey("DoNotMonitor")) {

            
            #line default
            #line hidden
            this.Write("\t\tUpdateChangedField(this, __change_component, __lastState_component, \"");
            
            #line 71 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 71 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 72 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"

		} else {

            
            #line default
            #line hidden
            this.Write("\t\t// Skipping the field \'");
            
            #line 75 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.m_name));
            
            #line default
            #line hidden
            this.Write("\'...\r\n");
            
            #line 76 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"

		} }

            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n");
            
            #line 81 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.GetNamespaceEndStatement()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 83 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 85 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 if(App.g_parsed.m_module != null) { 
            
            #line default
            #line hidden
            this.Write("\r\nclass ");
            
            #line 87 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(App.g_parsed.m_module.m_name));
            
            #line default
            #line hidden
            this.Write("Util :public Proud::Retained::ServerDataUtil\r\n{\r\npublic:\r\n\t~");
            
            #line 90 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(App.g_parsed.m_module.m_name));
            
            #line default
            #line hidden
            this.Write("Util()\r\n\t{\r\n\t\t// do nothing\r\n\t}\r\n\t\r\n\tProud::Retained::Component* CreateComponentB" +
                    "yTypeName(const char* typeName) override;\r\n\t\r\n};\r\n\r\nProud::Retained::Component* " +
                    "");
            
            #line 99 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(App.g_parsed.m_module.m_name));
            
            #line default
            #line hidden
            this.Write("Util::CreateComponentByTypeName(const char* typeName)\r\n{\r\n");
            
            #line 101 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
foreach(var c in App.g_parsed.m_components) { 
            
            #line default
            #line hidden
            this.Write("\tif (!strcmp(typeName, \"class ");
            
            #line 102 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.m_className));
            
            #line default
            #line hidden
            this.Write("\" )) // type_info.name() 값\r\n\t{\r\n\t\treturn new ");
            
            #line 104 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.m_className));
            
            #line default
            #line hidden
            this.Write("();\r\n\t}\r\n");
            
            #line 106 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t// 매치되는 것이 없다. 아마도 에러다.\r\n\treturn nullptr;\r\n}\r\n\r\n");
            
            #line 111 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(App.g_parsed.m_module.m_name));
            
            #line default
            #line hidden
            this.Write("Util g_serverDataUtil;\r\n\r\n// LoadLibrary에서 사용되는 exported function이다.\r\nProud::Reta" +
                    "ined::ServerDataUtil* GetRetainedServerDataUtil()\r\n{\t\r\n\treturn &g_serverDataUtil" +
                    ";\r\n}\r\n\r\n");
            
            #line 119 "D:\imays-2\works\engine\dev004-01\R2\ProudNet\UtilSrc\PIDL\PIDL\OutputTemplate\CppComponentImpl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" \r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class CppComponentImplBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
