<#@ template language="C#" #>
<#@ assembly name="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="CSHelper.ttinclude"#>

// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

<#
    WriteUsings();
    foreach(var gi in App.g_parsed.m_globalInterfaces)
    {
        ProxyClassDef(gi);
    }
#>

<#+ 
    void ProxyClassDef(Parsed_GlobalInterface gi)
    {
#>
namespace <#=gi.m_name#>
{
	<#=gi.m_accessibility#> class Proxy:Nettention.Proud.RmiProxy
	{
<#+     
        foreach(var mt in gi.m_methods)
        {
            ProxyMethodDef(gi, mt);            
        }
#>	
		#if USE_RMI_NAME_STRING
<#+
		DefRmiNames_all("public const string", gi, false);
#>
		#else
<#+
        DefRmiNames_all("public const string", gi, true);
#>
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
<#+
    }
#>

<#+
    void ProxyMethodDef(Parsed_GlobalInterface gi, Parsed_Method mt)
    {
#>
public bool <#+ MethodDecl(mt); #>
{
	<#+ PushIndent("\t\t"); SerializeParams(gi,mt); PopIndent(); #>
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_<#=mt.m_name#>, Common.<#=mt.m_name#>);
}

public bool <#+ MultiMethodDecl(mt); #>
{
	<#+ SerializeParams(gi,mt); #>
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_<#=mt.m_name#>, Common.<#=mt.m_name#>);
}
<#+
    }
#>

<#+ 
    // method declaration statement을 생성하는 subprogram.
    void MethodDecl(Parsed_Method mt)   
    {
#>
<#=mt.m_name#>(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext<#+ ParamDefs(mt,true);#>)
<#+
    }
#>

<#+ 
    // method declaration statement을 생성하는 subprogram.
    void MultiMethodDecl(Parsed_Method mt)   
    {
#>
<#=mt.m_name#>(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext<#+ ParamDefs(mt,true);#>)
<#+
    }
#>

<#+ 
    void SerializeParams(Parsed_GlobalInterface gi,Parsed_Method mt) 
    {
#>
Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.<#=mt.m_name#>;
__msg.Write(__msgid);
<#+
        foreach(var p in mt.m_params)
        {
#>
<#=gi.m_marshaler#>.Write(__msg, <#=p.m_name#>);
<#+
        }
    }
#>
