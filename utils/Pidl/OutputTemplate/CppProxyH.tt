<#@ template language="C#" #>
<#@ assembly name="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="CppHelper.ttinclude"#>  
// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

#pragma once

<# 
foreach(var inc in App.g_parsed.m_includes) 
{
#>
#include <#=inc.m_name#>
<# 
}#>

#include "<#=App.m_CommonHFileName#>"

<#
	foreach(var gi in App.g_parsed.m_globalInterfaces)
	{
		ProxyClassDecl(gi);
	}
#>

<#+ 
	void ProxyClassDecl(Parsed_GlobalInterface gi)
	{
#>
<#=gi.GetCppNestedNamespaceDefinition()#>

	class Proxy : public ::Proud::IRmiProxy
	{
	public:
<#+ 
		foreach(var mt in gi.m_methods) 
		{ 
			ProxyMethodDecl(gi,mt);  
		} 

		DeclRmiNames("",gi);
#>
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

<#=gi.GetCppNestedNamespaceDefinitionEnd()#>

<#+
	}
#>

<#+ void ProxyMethodDecl(Parsed_GlobalInterface gi, Parsed_Method mt) 
	{
#>
	virtual bool <#+ MethodDecl(mt, true); #> PN_SEALED; 
	virtual bool <#+ MultiMethodDecl(mt); #> PN_SEALED;  
<#+
	}
#>