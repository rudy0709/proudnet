  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "DB_common.h"

     
namespace DB2C2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestDbCacheClientLogon ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestDbCacheClientLogon bool RequestDbCacheClientLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & authenticationKey) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestDbCacheClientLogon(DerivedClass) bool DerivedClass::RequestDbCacheClientLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & authenticationKey)
#define CALL_DB2C2S_RequestDbCacheClientLogon RequestDbCacheClientLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & authenticationKey)
#define PARAM_DB2C2S_RequestDbCacheClientLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & authenticationKey)
               
		virtual bool RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestExclusiveLoadDataByFieldNameAndValue bool RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestExclusiveLoadDataByFieldNameAndValue(DerivedClass) bool DerivedClass::RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag, const Proud::ByteArray & message)
#define CALL_DB2C2S_RequestExclusiveLoadDataByFieldNameAndValue RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag, const Proud::ByteArray & message)
#define PARAM_DB2C2S_RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag, const Proud::ByteArray & message)
               
		virtual bool RequestExclusiveLoadDataByGuid ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestExclusiveLoadDataByGuid bool RequestExclusiveLoadDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestExclusiveLoadDataByGuid(DerivedClass) bool DerivedClass::RequestExclusiveLoadDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag, const Proud::ByteArray & message)
#define CALL_DB2C2S_RequestExclusiveLoadDataByGuid RequestExclusiveLoadDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag, const Proud::ByteArray & message)
#define PARAM_DB2C2S_RequestExclusiveLoadDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag, const Proud::ByteArray & message)
               
		virtual bool RequestExclusiveLoadDataByQuery ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestExclusiveLoadDataByQuery bool RequestExclusiveLoadDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestExclusiveLoadDataByQuery(DerivedClass) bool DerivedClass::RequestExclusiveLoadDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag, const Proud::ByteArray & message)
#define CALL_DB2C2S_RequestExclusiveLoadDataByQuery RequestExclusiveLoadDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag, const Proud::ByteArray & message)
#define PARAM_DB2C2S_RequestExclusiveLoadDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag, const Proud::ByteArray & message)
               
		virtual bool RequestExclusiveLoadNewData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::ByteArray & , const int64_t & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestExclusiveLoadNewData bool RequestExclusiveLoadNewData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & transaction) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestExclusiveLoadNewData(DerivedClass) bool DerivedClass::RequestExclusiveLoadNewData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & transaction)
#define CALL_DB2C2S_RequestExclusiveLoadNewData RequestExclusiveLoadNewData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & transaction)
#define PARAM_DB2C2S_RequestExclusiveLoadNewData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & transaction)
               
		virtual bool RequestUnloadDataBySessionGuid ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestUnloadDataBySessionGuid bool RequestUnloadDataBySessionGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToNextLoader) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestUnloadDataBySessionGuid(DerivedClass) bool DerivedClass::RequestUnloadDataBySessionGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToNextLoader)
#define CALL_DB2C2S_RequestUnloadDataBySessionGuid RequestUnloadDataBySessionGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToNextLoader)
#define PARAM_DB2C2S_RequestUnloadDataBySessionGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToNextLoader)
               
		virtual bool DenyUnloadData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_DenyUnloadData bool DenyUnloadData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToRequester) PN_OVERRIDE

#define DEFRMI_DB2C2S_DenyUnloadData(DerivedClass) bool DerivedClass::DenyUnloadData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToRequester)
#define CALL_DB2C2S_DenyUnloadData DenyUnloadData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToRequester)
#define PARAM_DB2C2S_DenyUnloadData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToRequester)
               
		virtual bool RequestForceCompleteUnload ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestForceCompleteUnload bool RequestForceCompleteUnload ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestForceCompleteUnload(DerivedClass) bool DerivedClass::RequestForceCompleteUnload ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID)
#define CALL_DB2C2S_RequestForceCompleteUnload RequestForceCompleteUnload ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID)
#define PARAM_DB2C2S_RequestForceCompleteUnload ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID)
               
		virtual bool RequestAddData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestAddData bool RequestAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestAddData(DerivedClass) bool DerivedClass::RequestAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & blocked)
#define CALL_DB2C2S_RequestAddData RequestAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & blocked)
#define PARAM_DB2C2S_RequestAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & blocked)
               
		virtual bool RequestUpdateData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestUpdateData bool RequestUpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const int64_t & tag, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestUpdateData(DerivedClass) bool DerivedClass::RequestUpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const int64_t & tag, const bool & blocked)
#define CALL_DB2C2S_RequestUpdateData RequestUpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const int64_t & tag, const bool & blocked)
#define PARAM_DB2C2S_RequestUpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const int64_t & tag, const bool & blocked)
               
		virtual bool RequestRemoveData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const int64_t & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestRemoveData bool RequestRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestRemoveData(DerivedClass) bool DerivedClass::RequestRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const bool & blocked)
#define CALL_DB2C2S_RequestRemoveData RequestRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const bool & blocked)
#define PARAM_DB2C2S_RequestRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const bool & blocked)
               
		virtual bool RequestUpdateDataList ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestUpdateDataList bool RequestUpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & changeBlock, const int64_t & tag, const bool & transaction, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestUpdateDataList(DerivedClass) bool DerivedClass::RequestUpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & changeBlock, const int64_t & tag, const bool & transaction, const bool & blocked)
#define CALL_DB2C2S_RequestUpdateDataList RequestUpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & changeBlock, const int64_t & tag, const bool & transaction, const bool & blocked)
#define PARAM_DB2C2S_RequestUpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & changeBlock, const int64_t & tag, const bool & transaction, const bool & blocked)
               
		virtual bool AddData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_AddData bool AddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const bool & writeDbmsImmediately) PN_OVERRIDE

#define DEFRMI_DB2C2S_AddData(DerivedClass) bool DerivedClass::AddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const bool & writeDbmsImmediately)
#define CALL_DB2C2S_AddData AddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const bool & writeDbmsImmediately)
#define PARAM_DB2C2S_AddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const bool & writeDbmsImmediately)
               
		virtual bool UpdateData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_UpdateData bool UpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & writeDbmsImmediately) PN_OVERRIDE

#define DEFRMI_DB2C2S_UpdateData(DerivedClass) bool DerivedClass::UpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & writeDbmsImmediately)
#define CALL_DB2C2S_UpdateData UpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & writeDbmsImmediately)
#define PARAM_DB2C2S_UpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & writeDbmsImmediately)
               
		virtual bool RemoveData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RemoveData bool RemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const bool & writeDbmsImmediately) PN_OVERRIDE

#define DEFRMI_DB2C2S_RemoveData(DerivedClass) bool DerivedClass::RemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const bool & writeDbmsImmediately)
#define CALL_DB2C2S_RemoveData RemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const bool & writeDbmsImmediately)
#define PARAM_DB2C2S_RemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const bool & writeDbmsImmediately)
               
		virtual bool UpdateDataList ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const bool & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_UpdateDataList bool UpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & transactional, const bool & writeDbmsImmediately) PN_OVERRIDE

#define DEFRMI_DB2C2S_UpdateDataList(DerivedClass) bool DerivedClass::UpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & transactional, const bool & writeDbmsImmediately)
#define CALL_DB2C2S_UpdateDataList UpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & transactional, const bool & writeDbmsImmediately)
#define PARAM_DB2C2S_UpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & transactional, const bool & writeDbmsImmediately)
               
		virtual bool MoveData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::Guid & , const Proud::Guid & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_MoveData bool MoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::Guid & destRootUUID, const Proud::Guid & destNodeUUID, const bool & writeDbmsImmediately) PN_OVERRIDE

#define DEFRMI_DB2C2S_MoveData(DerivedClass) bool DerivedClass::MoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::Guid & destRootUUID, const Proud::Guid & destNodeUUID, const bool & writeDbmsImmediately)
#define CALL_DB2C2S_MoveData MoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::Guid & destRootUUID, const Proud::Guid & destNodeUUID, const bool & writeDbmsImmediately)
#define PARAM_DB2C2S_MoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::Guid & destRootUUID, const Proud::Guid & destNodeUUID, const bool & writeDbmsImmediately)
               
		virtual bool RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const Proud::CVariant & , const int64_t & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveSnapshotDataByFieldNameAndValue bool RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveSnapshotDataByFieldNameAndValue(DerivedClass) bool DerivedClass::RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag)
#define CALL_DB2C2S_RequestNonExclusiveSnapshotDataByFieldNameAndValue RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag)
#define PARAM_DB2C2S_RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag)
               
		virtual bool RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const int64_t & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveSnapshotDataByGuid bool RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveSnapshotDataByGuid(DerivedClass) bool DerivedClass::RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag)
#define CALL_DB2C2S_RequestNonExclusiveSnapshotDataByGuid RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag)
#define PARAM_DB2C2S_RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag)
               
		virtual bool RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const int64_t & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveSnapshotDataByQuery bool RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveSnapshotDataByQuery(DerivedClass) bool DerivedClass::RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag)
#define CALL_DB2C2S_RequestNonExclusiveSnapshotDataByQuery RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag)
#define PARAM_DB2C2S_RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag)
               
		virtual bool RequestNonExclusiveAddData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveAddData bool RequestNonExclusiveAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const Proud::ByteArray & messageToLoader) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveAddData(DerivedClass) bool DerivedClass::RequestNonExclusiveAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define CALL_DB2C2S_RequestNonExclusiveAddData RequestNonExclusiveAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define PARAM_DB2C2S_RequestNonExclusiveAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const Proud::ByteArray & messageToLoader)
               
		virtual bool RequestNonExclusiveRemoveData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveRemoveData bool RequestNonExclusiveRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const Proud::ByteArray & messageToLoader) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveRemoveData(DerivedClass) bool DerivedClass::RequestNonExclusiveRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define CALL_DB2C2S_RequestNonExclusiveRemoveData RequestNonExclusiveRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define PARAM_DB2C2S_RequestNonExclusiveRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const Proud::ByteArray & messageToLoader)
               
		virtual bool RequestNonExclusiveSetValueIf ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::String & , const Proud::CVariant & , const int & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveSetValueIf bool RequestNonExclusiveSetValueIf ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const Proud::CVariant & newValue, const int & compareType, const Proud::CVariant & compareValue, const int64_t & tag, const Proud::ByteArray & messageToLoader) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveSetValueIf(DerivedClass) bool DerivedClass::RequestNonExclusiveSetValueIf ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const Proud::CVariant & newValue, const int & compareType, const Proud::CVariant & compareValue, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define CALL_DB2C2S_RequestNonExclusiveSetValueIf RequestNonExclusiveSetValueIf ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const Proud::CVariant & newValue, const int & compareType, const Proud::CVariant & compareValue, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define PARAM_DB2C2S_RequestNonExclusiveSetValueIf ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const Proud::CVariant & newValue, const int & compareType, const Proud::CVariant & compareValue, const int64_t & tag, const Proud::ByteArray & messageToLoader)
               
		virtual bool RequestNonExclusiveModifyValue ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::String & , const int & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestNonExclusiveModifyValue bool RequestNonExclusiveModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const int & operType, const Proud::CVariant & value, const int64_t & tag, const Proud::ByteArray & messageToLoader) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestNonExclusiveModifyValue(DerivedClass) bool DerivedClass::RequestNonExclusiveModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const int & operType, const Proud::CVariant & value, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define CALL_DB2C2S_RequestNonExclusiveModifyValue RequestNonExclusiveModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const int & operType, const Proud::CVariant & value, const int64_t & tag, const Proud::ByteArray & messageToLoader)
#define PARAM_DB2C2S_RequestNonExclusiveModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const int & operType, const Proud::CVariant & value, const int64_t & tag, const Proud::ByteArray & messageToLoader)
               
		virtual bool RequestIsolateData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::String & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestIsolateData bool RequestIsolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & rootTableName, const Proud::Guid & sessionGuid) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestIsolateData(DerivedClass) bool DerivedClass::RequestIsolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & rootTableName, const Proud::Guid & sessionGuid)
#define CALL_DB2C2S_RequestIsolateData RequestIsolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & rootTableName, const Proud::Guid & sessionGuid)
#define PARAM_DB2C2S_RequestIsolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & rootTableName, const Proud::Guid & sessionGuid)
               
		virtual bool RequestDeisolateData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::String & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2C2S_RequestDeisolateData bool RequestDeisolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & filterText, const Proud::Guid & sessionGuid) PN_OVERRIDE

#define DEFRMI_DB2C2S_RequestDeisolateData(DerivedClass) bool DerivedClass::RequestDeisolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & filterText, const Proud::Guid & sessionGuid)
#define CALL_DB2C2S_RequestDeisolateData RequestDeisolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & filterText, const Proud::Guid & sessionGuid)
#define PARAM_DB2C2S_RequestDeisolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & filterText, const Proud::Guid & sessionGuid)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestDbCacheClientLogon;
		static const PNTCHAR* RmiName_RequestExclusiveLoadDataByFieldNameAndValue;
		static const PNTCHAR* RmiName_RequestExclusiveLoadDataByGuid;
		static const PNTCHAR* RmiName_RequestExclusiveLoadDataByQuery;
		static const PNTCHAR* RmiName_RequestExclusiveLoadNewData;
		static const PNTCHAR* RmiName_RequestUnloadDataBySessionGuid;
		static const PNTCHAR* RmiName_DenyUnloadData;
		static const PNTCHAR* RmiName_RequestForceCompleteUnload;
		static const PNTCHAR* RmiName_RequestAddData;
		static const PNTCHAR* RmiName_RequestUpdateData;
		static const PNTCHAR* RmiName_RequestRemoveData;
		static const PNTCHAR* RmiName_RequestUpdateDataList;
		static const PNTCHAR* RmiName_AddData;
		static const PNTCHAR* RmiName_UpdateData;
		static const PNTCHAR* RmiName_RemoveData;
		static const PNTCHAR* RmiName_UpdateDataList;
		static const PNTCHAR* RmiName_MoveData;
		static const PNTCHAR* RmiName_RequestNonExclusiveSnapshotDataByFieldNameAndValue;
		static const PNTCHAR* RmiName_RequestNonExclusiveSnapshotDataByGuid;
		static const PNTCHAR* RmiName_RequestNonExclusiveSnapshotDataByQuery;
		static const PNTCHAR* RmiName_RequestNonExclusiveAddData;
		static const PNTCHAR* RmiName_RequestNonExclusiveRemoveData;
		static const PNTCHAR* RmiName_RequestNonExclusiveSetValueIf;
		static const PNTCHAR* RmiName_RequestNonExclusiveModifyValue;
		static const PNTCHAR* RmiName_RequestIsolateData;
		static const PNTCHAR* RmiName_RequestDeisolateData;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & ) > RequestDbCacheClientLogon_Function;
		virtual bool RequestDbCacheClientLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & authenticationKey) 
		{ 
			if (RequestDbCacheClientLogon_Function==nullptr) 
				return true; 
			return RequestDbCacheClientLogon_Function(remote,rmiContext, authenticationKey); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & ) > RequestExclusiveLoadDataByFieldNameAndValue_Function;
		virtual bool RequestExclusiveLoadDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag, const Proud::ByteArray & message) 
		{ 
			if (RequestExclusiveLoadDataByFieldNameAndValue_Function==nullptr) 
				return true; 
			return RequestExclusiveLoadDataByFieldNameAndValue_Function(remote,rmiContext, rootTableName, fieldName, cmpValue, tag, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const int64_t & , const Proud::ByteArray & ) > RequestExclusiveLoadDataByGuid_Function;
		virtual bool RequestExclusiveLoadDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag, const Proud::ByteArray & message) 
		{ 
			if (RequestExclusiveLoadDataByGuid_Function==nullptr) 
				return true; 
			return RequestExclusiveLoadDataByGuid_Function(remote,rmiContext, rootTableName, rootUUID, tag, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const int64_t & , const Proud::ByteArray & ) > RequestExclusiveLoadDataByQuery_Function;
		virtual bool RequestExclusiveLoadDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag, const Proud::ByteArray & message) 
		{ 
			if (RequestExclusiveLoadDataByQuery_Function==nullptr) 
				return true; 
			return RequestExclusiveLoadDataByQuery_Function(remote,rmiContext, rootTableName, queryString, tag, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::ByteArray & , const int64_t & , const bool & ) > RequestExclusiveLoadNewData_Function;
		virtual bool RequestExclusiveLoadNewData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & transaction) 
		{ 
			if (RequestExclusiveLoadNewData_Function==nullptr) 
				return true; 
			return RequestExclusiveLoadNewData_Function(remote,rmiContext, rootTableName, addDataBlock, tag, transaction); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & ) > RequestUnloadDataBySessionGuid_Function;
		virtual bool RequestUnloadDataBySessionGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToNextLoader) 
		{ 
			if (RequestUnloadDataBySessionGuid_Function==nullptr) 
				return true; 
			return RequestUnloadDataBySessionGuid_Function(remote,rmiContext, sessionGuid, messageToNextLoader); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & ) > DenyUnloadData_Function;
		virtual bool DenyUnloadData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ByteArray & messageToRequester) 
		{ 
			if (DenyUnloadData_Function==nullptr) 
				return true; 
			return DenyUnloadData_Function(remote,rmiContext, sessionGuid, messageToRequester); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & ) > RequestForceCompleteUnload_Function;
		virtual bool RequestForceCompleteUnload ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID) 
		{ 
			if (RequestForceCompleteUnload_Function==nullptr) 
				return true; 
			return RequestForceCompleteUnload_Function(remote,rmiContext, rootUUID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & ) > RequestAddData_Function;
		virtual bool RequestAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const bool & blocked) 
		{ 
			if (RequestAddData_Function==nullptr) 
				return true; 
			return RequestAddData_Function(remote,rmiContext, rootUUID, ownerUUID, addDataBlock, tag, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & ) > RequestUpdateData_Function;
		virtual bool RequestUpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const int64_t & tag, const bool & blocked) 
		{ 
			if (RequestUpdateData_Function==nullptr) 
				return true; 
			return RequestUpdateData_Function(remote,rmiContext, rootUUID, updateDataBlock, tag, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const int64_t & , const bool & ) > RequestRemoveData_Function;
		virtual bool RequestRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const bool & blocked) 
		{ 
			if (RequestRemoveData_Function==nullptr) 
				return true; 
			return RequestRemoveData_Function(remote,rmiContext, rootUUID, removeUUID, tag, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const bool & , const bool & ) > RequestUpdateDataList_Function;
		virtual bool RequestUpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & changeBlock, const int64_t & tag, const bool & transaction, const bool & blocked) 
		{ 
			if (RequestUpdateDataList_Function==nullptr) 
				return true; 
			return RequestUpdateDataList_Function(remote,rmiContext, rootUUID, changeBlock, tag, transaction, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const bool & ) > AddData_Function;
		virtual bool AddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const bool & writeDbmsImmediately) 
		{ 
			if (AddData_Function==nullptr) 
				return true; 
			return AddData_Function(remote,rmiContext, rootUUID, ownerUUID, addDataBlock, writeDbmsImmediately); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const bool & ) > UpdateData_Function;
		virtual bool UpdateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & writeDbmsImmediately) 
		{ 
			if (UpdateData_Function==nullptr) 
				return true; 
			return UpdateData_Function(remote,rmiContext, rootUUID, updateDataBlock, writeDbmsImmediately); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const bool & ) > RemoveData_Function;
		virtual bool RemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const bool & writeDbmsImmediately) 
		{ 
			if (RemoveData_Function==nullptr) 
				return true; 
			return RemoveData_Function(remote,rmiContext, rootUUID, removeUUID, writeDbmsImmediately); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const bool & , const bool & ) > UpdateDataList_Function;
		virtual bool UpdateDataList ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & transactional, const bool & writeDbmsImmediately) 
		{ 
			if (UpdateDataList_Function==nullptr) 
				return true; 
			return UpdateDataList_Function(remote,rmiContext, rootUUID, updateDataBlock, transactional, writeDbmsImmediately); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::Guid & , const Proud::Guid & , const bool & ) > MoveData_Function;
		virtual bool MoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::Guid & destRootUUID, const Proud::Guid & destNodeUUID, const bool & writeDbmsImmediately) 
		{ 
			if (MoveData_Function==nullptr) 
				return true; 
			return MoveData_Function(remote,rmiContext, rootTableName, rootUUID, nodeUUID, destRootUUID, destNodeUUID, writeDbmsImmediately); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const Proud::CVariant & , const int64_t & ) > RequestNonExclusiveSnapshotDataByFieldNameAndValue_Function;
		virtual bool RequestNonExclusiveSnapshotDataByFieldNameAndValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & fieldName, const Proud::CVariant & cmpValue, const int64_t & tag) 
		{ 
			if (RequestNonExclusiveSnapshotDataByFieldNameAndValue_Function==nullptr) 
				return true; 
			return RequestNonExclusiveSnapshotDataByFieldNameAndValue_Function(remote,rmiContext, rootTableName, fieldName, cmpValue, tag); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const int64_t & ) > RequestNonExclusiveSnapshotDataByGuid_Function;
		virtual bool RequestNonExclusiveSnapshotDataByGuid ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const int64_t & tag) 
		{ 
			if (RequestNonExclusiveSnapshotDataByGuid_Function==nullptr) 
				return true; 
			return RequestNonExclusiveSnapshotDataByGuid_Function(remote,rmiContext, rootTableName, rootUUID, tag); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::String & , const int64_t & ) > RequestNonExclusiveSnapshotDataByQuery_Function;
		virtual bool RequestNonExclusiveSnapshotDataByQuery ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::String & queryString, const int64_t & tag) 
		{ 
			if (RequestNonExclusiveSnapshotDataByQuery_Function==nullptr) 
				return true; 
			return RequestNonExclusiveSnapshotDataByQuery_Function(remote,rmiContext, rootTableName, queryString, tag); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & , const int64_t & , const Proud::ByteArray & ) > RequestNonExclusiveAddData_Function;
		virtual bool RequestNonExclusiveAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & ownerUUID, const Proud::ByteArray & addDataBlock, const int64_t & tag, const Proud::ByteArray & messageToLoader) 
		{ 
			if (RequestNonExclusiveAddData_Function==nullptr) 
				return true; 
			return RequestNonExclusiveAddData_Function(remote,rmiContext, rootTableName, rootUUID, ownerUUID, addDataBlock, tag, messageToLoader); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const int64_t & , const Proud::ByteArray & ) > RequestNonExclusiveRemoveData_Function;
		virtual bool RequestNonExclusiveRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const int64_t & tag, const Proud::ByteArray & messageToLoader) 
		{ 
			if (RequestNonExclusiveRemoveData_Function==nullptr) 
				return true; 
			return RequestNonExclusiveRemoveData_Function(remote,rmiContext, rootTableName, rootUUID, removeUUID, tag, messageToLoader); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::String & , const Proud::CVariant & , const int & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & ) > RequestNonExclusiveSetValueIf_Function;
		virtual bool RequestNonExclusiveSetValueIf ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const Proud::CVariant & newValue, const int & compareType, const Proud::CVariant & compareValue, const int64_t & tag, const Proud::ByteArray & messageToLoader) 
		{ 
			if (RequestNonExclusiveSetValueIf_Function==nullptr) 
				return true; 
			return RequestNonExclusiveSetValueIf_Function(remote,rmiContext, rootTableName, rootUUID, nodeUUID, propertyName, newValue, compareType, compareValue, tag, messageToLoader); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::String & , const Proud::Guid & , const Proud::Guid & , const Proud::String & , const int & , const Proud::CVariant & , const int64_t & , const Proud::ByteArray & ) > RequestNonExclusiveModifyValue_Function;
		virtual bool RequestNonExclusiveModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::String & rootTableName, const Proud::Guid & rootUUID, const Proud::Guid & nodeUUID, const Proud::String & propertyName, const int & operType, const Proud::CVariant & value, const int64_t & tag, const Proud::ByteArray & messageToLoader) 
		{ 
			if (RequestNonExclusiveModifyValue_Function==nullptr) 
				return true; 
			return RequestNonExclusiveModifyValue_Function(remote,rmiContext, rootTableName, rootUUID, nodeUUID, propertyName, operType, value, tag, messageToLoader); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::String & , const Proud::Guid & ) > RequestIsolateData_Function;
		virtual bool RequestIsolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & rootTableName, const Proud::Guid & sessionGuid) 
		{ 
			if (RequestIsolateData_Function==nullptr) 
				return true; 
			return RequestIsolateData_Function(remote,rmiContext, rootUUID, rootTableName, sessionGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::String & , const Proud::Guid & ) > RequestDeisolateData_Function;
		virtual bool RequestDeisolateData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::String & filterText, const Proud::Guid & sessionGuid) 
		{ 
			if (RequestDeisolateData_Function==nullptr) 
				return true; 
			return RequestDeisolateData_Function(remote,rmiContext, rootUUID, filterText, sessionGuid); 
		}

	};
#endif

}


     
namespace DB2S2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool NotifyDbCacheClientLogonFailed ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::ErrorType & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDbCacheClientLogonFailed bool NotifyDbCacheClientLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & reason) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDbCacheClientLogonFailed(DerivedClass) bool DerivedClass::NotifyDbCacheClientLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & reason)
#define CALL_DB2S2C_NotifyDbCacheClientLogonFailed NotifyDbCacheClientLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & reason)
#define PARAM_DB2S2C_NotifyDbCacheClientLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & reason)
               
		virtual bool NotifyDbCacheClientLogonSuccess ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDbCacheClientLogonSuccess bool NotifyDbCacheClientLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDbCacheClientLogonSuccess(DerivedClass) bool DerivedClass::NotifyDbCacheClientLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_DB2S2C_NotifyDbCacheClientLogonSuccess NotifyDbCacheClientLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_DB2S2C_NotifyDbCacheClientLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifyLoadDataComplete ( ::Proud::HostID, ::Proud::RmiContext& , const bool & , const int64_t & , const Proud::CFastArray<Proud::ByteArray> & , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ByteArray> & , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ErrorType> & , const Proud::CFastArray<Proud::String> & , const Proud::CFastArray<int32_t> & , const Proud::CFastArray<Proud::ByteArray> & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyLoadDataComplete bool NotifyLoadDataComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & isExclusive, const int64_t & tag, const Proud::CFastArray<Proud::ByteArray> & successList_loadedData, const Proud::CFastArray<Proud::Guid> & successList_sessionGuid, const Proud::CFastArray<Proud::ByteArray> & successList_message, const Proud::CFastArray<Proud::Guid> & failList_uuid, const Proud::CFastArray<Proud::ErrorType> & failList_reason, const Proud::CFastArray<Proud::String> & failList_comment, const Proud::CFastArray<int32_t> & failList_hresult, const Proud::CFastArray<Proud::ByteArray> & failList_message) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyLoadDataComplete(DerivedClass) bool DerivedClass::NotifyLoadDataComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & isExclusive, const int64_t & tag, const Proud::CFastArray<Proud::ByteArray> & successList_loadedData, const Proud::CFastArray<Proud::Guid> & successList_sessionGuid, const Proud::CFastArray<Proud::ByteArray> & successList_message, const Proud::CFastArray<Proud::Guid> & failList_uuid, const Proud::CFastArray<Proud::ErrorType> & failList_reason, const Proud::CFastArray<Proud::String> & failList_comment, const Proud::CFastArray<int32_t> & failList_hresult, const Proud::CFastArray<Proud::ByteArray> & failList_message)
#define CALL_DB2S2C_NotifyLoadDataComplete NotifyLoadDataComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & isExclusive, const int64_t & tag, const Proud::CFastArray<Proud::ByteArray> & successList_loadedData, const Proud::CFastArray<Proud::Guid> & successList_sessionGuid, const Proud::CFastArray<Proud::ByteArray> & successList_message, const Proud::CFastArray<Proud::Guid> & failList_uuid, const Proud::CFastArray<Proud::ErrorType> & failList_reason, const Proud::CFastArray<Proud::String> & failList_comment, const Proud::CFastArray<int32_t> & failList_hresult, const Proud::CFastArray<Proud::ByteArray> & failList_message)
#define PARAM_DB2S2C_NotifyLoadDataComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & isExclusive, const int64_t & tag, const Proud::CFastArray<Proud::ByteArray> & successList_loadedData, const Proud::CFastArray<Proud::Guid> & successList_sessionGuid, const Proud::CFastArray<Proud::ByteArray> & successList_message, const Proud::CFastArray<Proud::Guid> & failList_uuid, const Proud::CFastArray<Proud::ErrorType> & failList_reason, const Proud::CFastArray<Proud::String> & failList_comment, const Proud::CFastArray<int32_t> & failList_hresult, const Proud::CFastArray<Proud::ByteArray> & failList_message)
               
		virtual bool NotifyDataUnloadRequested ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ByteArray> & , const bool & , const int64_t & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDataUnloadRequested bool NotifyDataUnloadRequested ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::CFastArray<Proud::Guid> & sessionList, const Proud::CFastArray<Proud::ByteArray> & messageList, const bool & commonMessage, const int64_t & unloadRequestTimeoutTimeMs) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDataUnloadRequested(DerivedClass) bool DerivedClass::NotifyDataUnloadRequested ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::CFastArray<Proud::Guid> & sessionList, const Proud::CFastArray<Proud::ByteArray> & messageList, const bool & commonMessage, const int64_t & unloadRequestTimeoutTimeMs)
#define CALL_DB2S2C_NotifyDataUnloadRequested NotifyDataUnloadRequested ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::CFastArray<Proud::Guid> & sessionList, const Proud::CFastArray<Proud::ByteArray> & messageList, const bool & commonMessage, const int64_t & unloadRequestTimeoutTimeMs)
#define PARAM_DB2S2C_NotifyDataUnloadRequested ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::CFastArray<Proud::Guid> & sessionList, const Proud::CFastArray<Proud::ByteArray> & messageList, const bool & commonMessage, const int64_t & unloadRequestTimeoutTimeMs)
               
		virtual bool NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyUnloadRequestTimeoutTimeMs bool NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & unloadRequestTimeoutTimeMs) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyUnloadRequestTimeoutTimeMs(DerivedClass) bool DerivedClass::NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & unloadRequestTimeoutTimeMs)
#define CALL_DB2S2C_NotifyUnloadRequestTimeoutTimeMs NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & unloadRequestTimeoutTimeMs)
#define PARAM_DB2S2C_NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & unloadRequestTimeoutTimeMs)
               
		virtual bool NotifyAddDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyAddDataFailed bool NotifyAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyAddDataFailed(DerivedClass) bool DerivedClass::NotifyAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define CALL_DB2S2C_NotifyAddDataFailed NotifyAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define PARAM_DB2S2C_NotifyAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
               
		virtual bool NotifyAddDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyAddDataSuccess bool NotifyAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyAddDataSuccess(DerivedClass) bool DerivedClass::NotifyAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const bool & blocked)
#define CALL_DB2S2C_NotifyAddDataSuccess NotifyAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const bool & blocked)
#define PARAM_DB2S2C_NotifyAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const bool & blocked)
               
		virtual bool NotifyUpdateDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyUpdateDataFailed bool NotifyUpdateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyUpdateDataFailed(DerivedClass) bool DerivedClass::NotifyUpdateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define CALL_DB2S2C_NotifyUpdateDataFailed NotifyUpdateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define PARAM_DB2S2C_NotifyUpdateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
               
		virtual bool NotifyUpdateDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyUpdateDataSuccess bool NotifyUpdateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updataDataBlock, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyUpdateDataSuccess(DerivedClass) bool DerivedClass::NotifyUpdateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updataDataBlock, const bool & blocked)
#define CALL_DB2S2C_NotifyUpdateDataSuccess NotifyUpdateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updataDataBlock, const bool & blocked)
#define PARAM_DB2S2C_NotifyUpdateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updataDataBlock, const bool & blocked)
               
		virtual bool NotifyUpdateDataListFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyUpdateDataListFailed bool NotifyUpdateDataListFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyUpdateDataListFailed(DerivedClass) bool DerivedClass::NotifyUpdateDataListFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define CALL_DB2S2C_NotifyUpdateDataListFailed NotifyUpdateDataListFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define PARAM_DB2S2C_NotifyUpdateDataListFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
               
		virtual bool NotifyUpdateDataListSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyUpdateDataListSuccess bool NotifyUpdateDataListSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyUpdateDataListSuccess(DerivedClass) bool DerivedClass::NotifyUpdateDataListSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & blocked)
#define CALL_DB2S2C_NotifyUpdateDataListSuccess NotifyUpdateDataListSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & blocked)
#define PARAM_DB2S2C_NotifyUpdateDataListSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & blocked)
               
		virtual bool NotifyRemoveDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyRemoveDataFailed bool NotifyRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyRemoveDataFailed(DerivedClass) bool DerivedClass::NotifyRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define CALL_DB2S2C_NotifyRemoveDataFailed NotifyRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
#define PARAM_DB2S2C_NotifyRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked)
               
		virtual bool NotifyRemoveDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::Guid & , const bool & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyRemoveDataSuccess bool NotifyRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removedUUID, const bool & blocked) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyRemoveDataSuccess(DerivedClass) bool DerivedClass::NotifyRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removedUUID, const bool & blocked)
#define CALL_DB2S2C_NotifyRemoveDataSuccess NotifyRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removedUUID, const bool & blocked)
#define PARAM_DB2S2C_NotifyRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removedUUID, const bool & blocked)
               
		virtual bool NotifyNonExclusiveAddDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveAddDataFailed bool NotifyNonExclusiveAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveAddDataFailed(DerivedClass) bool DerivedClass::NotifyNonExclusiveAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define CALL_DB2S2C_NotifyNonExclusiveAddDataFailed NotifyNonExclusiveAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define PARAM_DB2S2C_NotifyNonExclusiveAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
               
		virtual bool NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveAddDataSuccess bool NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveAddDataSuccess(DerivedClass) bool DerivedClass::NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock)
#define CALL_DB2S2C_NotifyNonExclusiveAddDataSuccess NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock)
#define PARAM_DB2S2C_NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock)
               
		virtual bool NotifySomeoneAddData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifySomeoneAddData bool NotifySomeoneAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const Proud::ByteArray & message, const Proud::Guid & destParentUUID) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifySomeoneAddData(DerivedClass) bool DerivedClass::NotifySomeoneAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const Proud::ByteArray & message, const Proud::Guid & destParentUUID)
#define CALL_DB2S2C_NotifySomeoneAddData NotifySomeoneAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const Proud::ByteArray & message, const Proud::Guid & destParentUUID)
#define PARAM_DB2S2C_NotifySomeoneAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const Proud::ByteArray & message, const Proud::Guid & destParentUUID)
               
		virtual bool NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveRemoveDataFailed bool NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveRemoveDataFailed(DerivedClass) bool DerivedClass::NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define CALL_DB2S2C_NotifyNonExclusiveRemoveDataFailed NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define PARAM_DB2S2C_NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
               
		virtual bool NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveRemoveDataSuccess bool NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveRemoveDataSuccess(DerivedClass) bool DerivedClass::NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID)
#define CALL_DB2S2C_NotifyNonExclusiveRemoveDataSuccess NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID)
#define PARAM_DB2S2C_NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID)
               
		virtual bool NotifySomeoneRemoveData ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifySomeoneRemoveData bool NotifySomeoneRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifySomeoneRemoveData(DerivedClass) bool DerivedClass::NotifySomeoneRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const Proud::ByteArray & message)
#define CALL_DB2S2C_NotifySomeoneRemoveData NotifySomeoneRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const Proud::ByteArray & message)
#define PARAM_DB2S2C_NotifySomeoneRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const Proud::ByteArray & message)
               
		virtual bool NotifyNonExclusiveSetValueFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveSetValueFailed bool NotifyNonExclusiveSetValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveSetValueFailed(DerivedClass) bool DerivedClass::NotifyNonExclusiveSetValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define CALL_DB2S2C_NotifyNonExclusiveSetValueFailed NotifyNonExclusiveSetValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define PARAM_DB2S2C_NotifyNonExclusiveSetValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
               
		virtual bool NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveSetValueSuccess bool NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveSetValueSuccess(DerivedClass) bool DerivedClass::NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
#define CALL_DB2S2C_NotifyNonExclusiveSetValueSuccess NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
#define PARAM_DB2S2C_NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
               
		virtual bool NotifySomeoneSetValue ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifySomeoneSetValue bool NotifySomeoneSetValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifySomeoneSetValue(DerivedClass) bool DerivedClass::NotifySomeoneSetValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
#define CALL_DB2S2C_NotifySomeoneSetValue NotifySomeoneSetValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
#define PARAM_DB2S2C_NotifySomeoneSetValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
               
		virtual bool NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveModifyValueFailed bool NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveModifyValueFailed(DerivedClass) bool DerivedClass::NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define CALL_DB2S2C_NotifyNonExclusiveModifyValueFailed NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
#define PARAM_DB2S2C_NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source)
               
		virtual bool NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyNonExclusiveModifyValueSuccess bool NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyNonExclusiveModifyValueSuccess(DerivedClass) bool DerivedClass::NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
#define CALL_DB2S2C_NotifyNonExclusiveModifyValueSuccess NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
#define PARAM_DB2S2C_NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock)
               
		virtual bool NotifySomeoneModifyValue ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifySomeoneModifyValue bool NotifySomeoneModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifySomeoneModifyValue(DerivedClass) bool DerivedClass::NotifySomeoneModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
#define CALL_DB2S2C_NotifySomeoneModifyValue NotifySomeoneModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
#define PARAM_DB2S2C_NotifySomeoneModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message)
               
		virtual bool NotifyWarning ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::ErrorType & , const Proud::ErrorType & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyWarning bool NotifyWarning ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & errorType, const Proud::ErrorType & detailtype, const Proud::String & comment) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyWarning(DerivedClass) bool DerivedClass::NotifyWarning ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & errorType, const Proud::ErrorType & detailtype, const Proud::String & comment)
#define CALL_DB2S2C_NotifyWarning NotifyWarning ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & errorType, const Proud::ErrorType & detailtype, const Proud::String & comment)
#define PARAM_DB2S2C_NotifyWarning ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & errorType, const Proud::ErrorType & detailtype, const Proud::String & comment)
               
		virtual bool NotifyDbmsWriteDone ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::DbmsWritePropNodePendType & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDbmsWriteDone bool NotifyDbmsWriteDone ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::DbmsWritePropNodePendType & type, const Proud::Guid & loadeeGuid) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDbmsWriteDone(DerivedClass) bool DerivedClass::NotifyDbmsWriteDone ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::DbmsWritePropNodePendType & type, const Proud::Guid & loadeeGuid)
#define CALL_DB2S2C_NotifyDbmsWriteDone NotifyDbmsWriteDone ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::DbmsWritePropNodePendType & type, const Proud::Guid & loadeeGuid)
#define PARAM_DB2S2C_NotifyDbmsWriteDone ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::DbmsWritePropNodePendType & type, const Proud::Guid & loadeeGuid)
               
		virtual bool NotifyDbmsAccessError ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ByteArray & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDbmsAccessError bool NotifyDbmsAccessError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ByteArray & message, const Proud::String & comment) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDbmsAccessError(DerivedClass) bool DerivedClass::NotifyDbmsAccessError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ByteArray & message, const Proud::String & comment)
#define CALL_DB2S2C_NotifyDbmsAccessError NotifyDbmsAccessError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ByteArray & message, const Proud::String & comment)
#define PARAM_DB2S2C_NotifyDbmsAccessError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ByteArray & message, const Proud::String & comment)
               
		virtual bool NotifyIsolateDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyIsolateDataSuccess bool NotifyIsolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyIsolateDataSuccess(DerivedClass) bool DerivedClass::NotifyIsolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
#define CALL_DB2S2C_NotifyIsolateDataSuccess NotifyIsolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
#define PARAM_DB2S2C_NotifyIsolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
               
		virtual bool NotifyIsolateDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ErrorType & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyIsolateDataFailed bool NotifyIsolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyIsolateDataFailed(DerivedClass) bool DerivedClass::NotifyIsolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
#define CALL_DB2S2C_NotifyIsolateDataFailed NotifyIsolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
#define PARAM_DB2S2C_NotifyIsolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
               
		virtual bool NotifyDeisolateDataSuccess ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDeisolateDataSuccess bool NotifyDeisolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDeisolateDataSuccess(DerivedClass) bool DerivedClass::NotifyDeisolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
#define CALL_DB2S2C_NotifyDeisolateDataSuccess NotifyDeisolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
#define PARAM_DB2S2C_NotifyDeisolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock)
               
		virtual bool NotifyDeisolateDataFailed ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ErrorType & , const Proud::String & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDeisolateDataFailed bool NotifyDeisolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDeisolateDataFailed(DerivedClass) bool DerivedClass::NotifyDeisolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
#define CALL_DB2S2C_NotifyDeisolateDataFailed NotifyDeisolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
#define PARAM_DB2S2C_NotifyDeisolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment)
               
		virtual bool NotifyDataForceUnloaded ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & )		{ 
			return false;
		} 

#define DECRMI_DB2S2C_NotifyDataForceUnloaded bool NotifyDataForceUnloaded ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootGuid) PN_OVERRIDE

#define DEFRMI_DB2S2C_NotifyDataForceUnloaded(DerivedClass) bool DerivedClass::NotifyDataForceUnloaded ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootGuid)
#define CALL_DB2S2C_NotifyDataForceUnloaded NotifyDataForceUnloaded ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootGuid)
#define PARAM_DB2S2C_NotifyDataForceUnloaded ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootGuid)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_NotifyDbCacheClientLogonFailed;
		static const PNTCHAR* RmiName_NotifyDbCacheClientLogonSuccess;
		static const PNTCHAR* RmiName_NotifyLoadDataComplete;
		static const PNTCHAR* RmiName_NotifyDataUnloadRequested;
		static const PNTCHAR* RmiName_NotifyUnloadRequestTimeoutTimeMs;
		static const PNTCHAR* RmiName_NotifyAddDataFailed;
		static const PNTCHAR* RmiName_NotifyAddDataSuccess;
		static const PNTCHAR* RmiName_NotifyUpdateDataFailed;
		static const PNTCHAR* RmiName_NotifyUpdateDataSuccess;
		static const PNTCHAR* RmiName_NotifyUpdateDataListFailed;
		static const PNTCHAR* RmiName_NotifyUpdateDataListSuccess;
		static const PNTCHAR* RmiName_NotifyRemoveDataFailed;
		static const PNTCHAR* RmiName_NotifyRemoveDataSuccess;
		static const PNTCHAR* RmiName_NotifyNonExclusiveAddDataFailed;
		static const PNTCHAR* RmiName_NotifyNonExclusiveAddDataSuccess;
		static const PNTCHAR* RmiName_NotifySomeoneAddData;
		static const PNTCHAR* RmiName_NotifyNonExclusiveRemoveDataFailed;
		static const PNTCHAR* RmiName_NotifyNonExclusiveRemoveDataSuccess;
		static const PNTCHAR* RmiName_NotifySomeoneRemoveData;
		static const PNTCHAR* RmiName_NotifyNonExclusiveSetValueFailed;
		static const PNTCHAR* RmiName_NotifyNonExclusiveSetValueSuccess;
		static const PNTCHAR* RmiName_NotifySomeoneSetValue;
		static const PNTCHAR* RmiName_NotifyNonExclusiveModifyValueFailed;
		static const PNTCHAR* RmiName_NotifyNonExclusiveModifyValueSuccess;
		static const PNTCHAR* RmiName_NotifySomeoneModifyValue;
		static const PNTCHAR* RmiName_NotifyWarning;
		static const PNTCHAR* RmiName_NotifyDbmsWriteDone;
		static const PNTCHAR* RmiName_NotifyDbmsAccessError;
		static const PNTCHAR* RmiName_NotifyIsolateDataSuccess;
		static const PNTCHAR* RmiName_NotifyIsolateDataFailed;
		static const PNTCHAR* RmiName_NotifyDeisolateDataSuccess;
		static const PNTCHAR* RmiName_NotifyDeisolateDataFailed;
		static const PNTCHAR* RmiName_NotifyDataForceUnloaded;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::ErrorType & ) > NotifyDbCacheClientLogonFailed_Function;
		virtual bool NotifyDbCacheClientLogonFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & reason) 
		{ 
			if (NotifyDbCacheClientLogonFailed_Function==nullptr) 
				return true; 
			return NotifyDbCacheClientLogonFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyDbCacheClientLogonSuccess_Function;
		virtual bool NotifyDbCacheClientLogonSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyDbCacheClientLogonSuccess_Function==nullptr) 
				return true; 
			return NotifyDbCacheClientLogonSuccess_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const bool & , const int64_t & , const Proud::CFastArray<Proud::ByteArray> & , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ByteArray> & , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ErrorType> & , const Proud::CFastArray<Proud::String> & , const Proud::CFastArray<int32_t> & , const Proud::CFastArray<Proud::ByteArray> & ) > NotifyLoadDataComplete_Function;
		virtual bool NotifyLoadDataComplete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const bool & isExclusive, const int64_t & tag, const Proud::CFastArray<Proud::ByteArray> & successList_loadedData, const Proud::CFastArray<Proud::Guid> & successList_sessionGuid, const Proud::CFastArray<Proud::ByteArray> & successList_message, const Proud::CFastArray<Proud::Guid> & failList_uuid, const Proud::CFastArray<Proud::ErrorType> & failList_reason, const Proud::CFastArray<Proud::String> & failList_comment, const Proud::CFastArray<int32_t> & failList_hresult, const Proud::CFastArray<Proud::ByteArray> & failList_message) 
		{ 
			if (NotifyLoadDataComplete_Function==nullptr) 
				return true; 
			return NotifyLoadDataComplete_Function(remote,rmiContext, isExclusive, tag, successList_loadedData, successList_sessionGuid, successList_message, failList_uuid, failList_reason, failList_comment, failList_hresult, failList_message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::CFastArray<Proud::Guid> & , const Proud::CFastArray<Proud::ByteArray> & , const bool & , const int64_t & ) > NotifyDataUnloadRequested_Function;
		virtual bool NotifyDataUnloadRequested ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::CFastArray<Proud::Guid> & sessionList, const Proud::CFastArray<Proud::ByteArray> & messageList, const bool & commonMessage, const int64_t & unloadRequestTimeoutTimeMs) 
		{ 
			if (NotifyDataUnloadRequested_Function==nullptr) 
				return true; 
			return NotifyDataUnloadRequested_Function(remote,rmiContext, sessionList, messageList, commonMessage, unloadRequestTimeoutTimeMs); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & ) > NotifyUnloadRequestTimeoutTimeMs_Function;
		virtual bool NotifyUnloadRequestTimeoutTimeMs ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & unloadRequestTimeoutTimeMs) 
		{ 
			if (NotifyUnloadRequestTimeoutTimeMs_Function==nullptr) 
				return true; 
			return NotifyUnloadRequestTimeoutTimeMs_Function(remote,rmiContext, unloadRequestTimeoutTimeMs); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & ) > NotifyAddDataFailed_Function;
		virtual bool NotifyAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) 
		{ 
			if (NotifyAddDataFailed_Function==nullptr) 
				return true; 
			return NotifyAddDataFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & ) > NotifyAddDataSuccess_Function;
		virtual bool NotifyAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const bool & blocked) 
		{ 
			if (NotifyAddDataSuccess_Function==nullptr) 
				return true; 
			return NotifyAddDataSuccess_Function(remote,rmiContext, tag, rootUUID, addDataBlock, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & ) > NotifyUpdateDataFailed_Function;
		virtual bool NotifyUpdateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) 
		{ 
			if (NotifyUpdateDataFailed_Function==nullptr) 
				return true; 
			return NotifyUpdateDataFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & ) > NotifyUpdateDataSuccess_Function;
		virtual bool NotifyUpdateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updataDataBlock, const bool & blocked) 
		{ 
			if (NotifyUpdateDataSuccess_Function==nullptr) 
				return true; 
			return NotifyUpdateDataSuccess_Function(remote,rmiContext, tag, rootUUID, updataDataBlock, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & ) > NotifyUpdateDataListFailed_Function;
		virtual bool NotifyUpdateDataListFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) 
		{ 
			if (NotifyUpdateDataListFailed_Function==nullptr) 
				return true; 
			return NotifyUpdateDataListFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & , const bool & ) > NotifyUpdateDataListSuccess_Function;
		virtual bool NotifyUpdateDataListSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const bool & blocked) 
		{ 
			if (NotifyUpdateDataListSuccess_Function==nullptr) 
				return true; 
			return NotifyUpdateDataListSuccess_Function(remote,rmiContext, tag, rootUUID, updateDataBlock, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & , const bool & ) > NotifyRemoveDataFailed_Function;
		virtual bool NotifyRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source, const bool & blocked) 
		{ 
			if (NotifyRemoveDataFailed_Function==nullptr) 
				return true; 
			return NotifyRemoveDataFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::Guid & , const bool & ) > NotifyRemoveDataSuccess_Function;
		virtual bool NotifyRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removedUUID, const bool & blocked) 
		{ 
			if (NotifyRemoveDataSuccess_Function==nullptr) 
				return true; 
			return NotifyRemoveDataSuccess_Function(remote,rmiContext, tag, rootUUID, removedUUID, blocked); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & ) > NotifyNonExclusiveAddDataFailed_Function;
		virtual bool NotifyNonExclusiveAddDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) 
		{ 
			if (NotifyNonExclusiveAddDataFailed_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveAddDataFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & ) > NotifyNonExclusiveAddDataSuccess_Function;
		virtual bool NotifyNonExclusiveAddDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock) 
		{ 
			if (NotifyNonExclusiveAddDataSuccess_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveAddDataSuccess_Function(remote,rmiContext, tag, rootUUID, addDataBlock); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & , const Proud::Guid & ) > NotifySomeoneAddData_Function;
		virtual bool NotifySomeoneAddData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & addDataBlock, const Proud::ByteArray & message, const Proud::Guid & destParentUUID) 
		{ 
			if (NotifySomeoneAddData_Function==nullptr) 
				return true; 
			return NotifySomeoneAddData_Function(remote,rmiContext, rootUUID, addDataBlock, message, destParentUUID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & ) > NotifyNonExclusiveRemoveDataFailed_Function;
		virtual bool NotifyNonExclusiveRemoveDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) 
		{ 
			if (NotifyNonExclusiveRemoveDataFailed_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveRemoveDataFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::Guid & ) > NotifyNonExclusiveRemoveDataSuccess_Function;
		virtual bool NotifyNonExclusiveRemoveDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::Guid & removeUUID) 
		{ 
			if (NotifyNonExclusiveRemoveDataSuccess_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveRemoveDataSuccess_Function(remote,rmiContext, tag, rootUUID, removeUUID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & ) > NotifySomeoneRemoveData_Function;
		virtual bool NotifySomeoneRemoveData ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::Guid & removeUUID, const Proud::ByteArray & message) 
		{ 
			if (NotifySomeoneRemoveData_Function==nullptr) 
				return true; 
			return NotifySomeoneRemoveData_Function(remote,rmiContext, rootUUID, removeUUID, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & ) > NotifyNonExclusiveSetValueFailed_Function;
		virtual bool NotifyNonExclusiveSetValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) 
		{ 
			if (NotifyNonExclusiveSetValueFailed_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveSetValueFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & ) > NotifyNonExclusiveSetValueSuccess_Function;
		virtual bool NotifyNonExclusiveSetValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock) 
		{ 
			if (NotifyNonExclusiveSetValueSuccess_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveSetValueSuccess_Function(remote,rmiContext, tag, rootUUID, updateDataBlock); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & ) > NotifySomeoneSetValue_Function;
		virtual bool NotifySomeoneSetValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message) 
		{ 
			if (NotifySomeoneSetValue_Function==nullptr) 
				return true; 
			return NotifySomeoneSetValue_Function(remote,rmiContext, rootUUID, updateDataBlock, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ErrorType & , const Proud::String & , const int32_t & , const Proud::String & ) > NotifyNonExclusiveModifyValueFailed_Function;
		virtual bool NotifyNonExclusiveModifyValueFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ErrorType & reason, const Proud::String & comment, const int32_t & hresult, const Proud::String & source) 
		{ 
			if (NotifyNonExclusiveModifyValueFailed_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveModifyValueFailed_Function(remote,rmiContext, tag, reason, comment, hresult, source); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::Guid & , const Proud::ByteArray & ) > NotifyNonExclusiveModifyValueSuccess_Function;
		virtual bool NotifyNonExclusiveModifyValueSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock) 
		{ 
			if (NotifyNonExclusiveModifyValueSuccess_Function==nullptr) 
				return true; 
			return NotifyNonExclusiveModifyValueSuccess_Function(remote,rmiContext, tag, rootUUID, updateDataBlock); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ByteArray & , const Proud::ByteArray & ) > NotifySomeoneModifyValue_Function;
		virtual bool NotifySomeoneModifyValue ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & rootUUID, const Proud::ByteArray & updateDataBlock, const Proud::ByteArray & message) 
		{ 
			if (NotifySomeoneModifyValue_Function==nullptr) 
				return true; 
			return NotifySomeoneModifyValue_Function(remote,rmiContext, rootUUID, updateDataBlock, message); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::ErrorType & , const Proud::ErrorType & , const Proud::String & ) > NotifyWarning_Function;
		virtual bool NotifyWarning ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::ErrorType & errorType, const Proud::ErrorType & detailtype, const Proud::String & comment) 
		{ 
			if (NotifyWarning_Function==nullptr) 
				return true; 
			return NotifyWarning_Function(remote,rmiContext, errorType, detailtype, comment); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::DbmsWritePropNodePendType & , const Proud::Guid & ) > NotifyDbmsWriteDone_Function;
		virtual bool NotifyDbmsWriteDone ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::DbmsWritePropNodePendType & type, const Proud::Guid & loadeeGuid) 
		{ 
			if (NotifyDbmsWriteDone_Function==nullptr) 
				return true; 
			return NotifyDbmsWriteDone_Function(remote,rmiContext, type, loadeeGuid); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int64_t & , const Proud::ByteArray & , const Proud::String & ) > NotifyDbmsAccessError_Function;
		virtual bool NotifyDbmsAccessError ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int64_t & tag, const Proud::ByteArray & message, const Proud::String & comment) 
		{ 
			if (NotifyDbmsAccessError_Function==nullptr) 
				return true; 
			return NotifyDbmsAccessError_Function(remote,rmiContext, tag, message, comment); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & ) > NotifyIsolateDataSuccess_Function;
		virtual bool NotifyIsolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock) 
		{ 
			if (NotifyIsolateDataSuccess_Function==nullptr) 
				return true; 
			return NotifyIsolateDataSuccess_Function(remote,rmiContext, sessionGuid, rootUUID, dataBlock); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ErrorType & , const Proud::String & ) > NotifyIsolateDataFailed_Function;
		virtual bool NotifyIsolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment) 
		{ 
			if (NotifyIsolateDataFailed_Function==nullptr) 
				return true; 
			return NotifyIsolateDataFailed_Function(remote,rmiContext, sessionGuid, reason, comment); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & , const Proud::ByteArray & ) > NotifyDeisolateDataSuccess_Function;
		virtual bool NotifyDeisolateDataSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootUUID, const Proud::ByteArray & dataBlock) 
		{ 
			if (NotifyDeisolateDataSuccess_Function==nullptr) 
				return true; 
			return NotifyDeisolateDataSuccess_Function(remote,rmiContext, sessionGuid, rootUUID, dataBlock); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::ErrorType & , const Proud::String & ) > NotifyDeisolateDataFailed_Function;
		virtual bool NotifyDeisolateDataFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::ErrorType & reason, const Proud::String & comment) 
		{ 
			if (NotifyDeisolateDataFailed_Function==nullptr) 
				return true; 
			return NotifyDeisolateDataFailed_Function(remote,rmiContext, sessionGuid, reason, comment); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::Guid & , const Proud::Guid & ) > NotifyDataForceUnloaded_Function;
		virtual bool NotifyDataForceUnloaded ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::Guid & sessionGuid, const Proud::Guid & rootGuid) 
		{ 
			if (NotifyDataForceUnloaded_Function==nullptr) 
				return true; 
			return NotifyDataForceUnloaded_Function(remote,rmiContext, sessionGuid, rootGuid); 
		}

	};
#endif

}


