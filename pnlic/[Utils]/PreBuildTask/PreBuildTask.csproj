<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OutputPath>bin\Release</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OutputPath>bin\Debug</OutputPath>
  </PropertyGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="@rem 환경변수가 등록되어 있는 지를 체크합니다.&#xD;&#xA;if &quot;%25PN_BUILD_PATH%25&quot; == &quot;&quot; (&#xD;&#xA;    echo #### Error : PN_BUILD_PATH 환경변수를 등록해 주세요.&#xD;&#xA;    echo ####   기본값 : &quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\MSBuild\Current\Bin\MSBuild.exe&quot;&#xD;&#xA;    exit /b&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;if &quot;%25PN_SIGN_TOOL_PATH%25&quot; == &quot;&quot; (&#xD;&#xA;    echo #### Error : PN_SIGN_TOOL_PATH 환경변수를 등록해 주세요.&#xD;&#xA;    echo ####   기본값 : &quot;C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe&quot;&#xD;&#xA;    exit /b&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;@rem NuGet 패키지 매니저를 다운로드 받아 설치합니다.&#xD;&#xA;@rem 현재(2022.11.01) 기준으로 v6.3.1이 최신 버전입니다.&#xD;&#xA;set util_path=$(ProjectDir)..\..\..\utils&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25util_path%25&quot; (&#xD;&#xA;    mkdir &quot;%25util_path%25&quot;&#xD;&#xA;)&#xD;&#xA;if not exist &quot;%25util_path%25\nuget.exe&quot; (&#xD;&#xA;    powershell &quot;(new-Object System.Net.WebClient).DownloadFile('https://dist.nuget.org/win-x86-commandline/latest/nuget.exe', '%25util_path%25\nuget.exe')&quot;&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;@rem NuGet 패키지를 다운로드 받습니다.&#xD;&#xA;set pkg_path=$(ProjectDir)..\..\packages&#xD;&#xA;set pkg_flag=F&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25pkg_path%25\Antlr4.4.6.6\&quot; (&#xD;&#xA;    set pkg_flag=T&#xD;&#xA;)&#xD;&#xA;if not exist &quot;%25pkg_path%25\Antlr4.CodeGenerator.4.6.6\&quot; (&#xD;&#xA;    set pkg_flag=T&#xD;&#xA;)&#xD;&#xA;if not exist &quot;%25pkg_path%25\Antlr4.Runtime.4.6.6\&quot; (&#xD;&#xA;    set pkg_flag=T&#xD;&#xA;)&#xD;&#xA;if not exist &quot;%25pkg_path%25\YamlDotNet.12.0.2\&quot; (&#xD;&#xA;    set pkg_flag=T&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;if &quot;%25pkg_flag%25&quot; == &quot;T&quot; (&#xD;&#xA;    pushd .\&#xD;&#xA;    cd $(ProjectDir)..\Pidl\&#xD;&#xA;    %25util_path%25\nuget.exe restore -PackagesDirectory &quot;%25pkg_path%25&quot;&#xD;&#xA;    popd&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;@rem CodeVirtualizer 난독화 도구를 다운로드 받아 설치합니다.&#xD;&#xA;set util_path=$(ProjectDir)..\..\..\utils\CodeVirtualizer&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25util_path%25&quot; (&#xD;&#xA;    mkdir &quot;%25util_path%25&quot;&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25util_path%25\Virtualizer.exe&quot; (&#xD;&#xA;    powershell &quot;(new-Object System.Net.WebClient).DownloadFile('https://proudnet-utils.s3.us-east-1.amazonaws.com/CodeVirtualizer-v2.2.2.zip', '%25util_path%25\CodeVirtualizer-v2.2.2.zip')&quot;&#xD;&#xA;    powershell &quot;(Expand-Archive -Path %25util_path%25\CodeVirtualizer-v2.2.2.zip -DestinationPath %25util_path%25)&quot;&#xD;&#xA;    del /f /q &quot;%25util_path%25\CodeVirtualizer-v2.2.2.zip&quot;&#xD;&#xA;)" />
  </Target>

</Project>
