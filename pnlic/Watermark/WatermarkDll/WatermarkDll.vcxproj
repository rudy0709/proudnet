<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug_static_CRT|Win32">
      <Configuration>Debug_static_CRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_static_CRT|Win32">
      <Configuration>Release_static_CRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug_static_CRT|x64">
      <Configuration>Debug_static_CRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_static_CRT|x64">
      <Configuration>Release_static_CRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{66CD07AC-8B22-4C31-9B80-57C346E0C1D2}</ProjectGuid>
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Watermark</RootNamespace>
    <ProjectName>2-4) WatermarkDll</ProjectName>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|Win32'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|Win32'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|x64'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|x64'">
    <OutDir>bin\$(Configuration)-x86_$(PlatformArchitecture)\</OutDir>
    <IntDir>obj\$(Configuration)-x86_$(PlatformArchitecture)\</IntDir>
    <TargetName>InstallHelper_UnProtect</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;DEBUG;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;_AFXDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization>Disabled</Optimization>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;DEBUG;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization>Disabled</Optimization>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;_AFXDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization />
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization />
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;DEBUG;_EXCEPTIONALLY_;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;_AFXDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization>Disabled</Optimization>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_static_CRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;DEBUG;_EXCEPTIONALLY_;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization>Disabled</Optimization>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_EXCEPTIONALLY_;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;_AFXDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization />
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_static_CRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_EXCEPTIONALLY_;WIN32;_WINDOWS;_NO_NTTNTRACE;_USRDLL;WATERMARKDLL_EXPORTS;PROUDSRCCOPY;_WINSOCKAPI_;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>../../../utils/CodeVirtualizer/Include/C/</AdditionalIncludeDirectories>
      <Optimization />
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <AdditionalDependencies>..\..\..\utils\CodeVirtualizer\Lib\COFF\VirtualizerSDK$(PlatformArchitecture).lib;..\..\AuthNetLib\ProudNetClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetClient.lib;..\..\AuthNetLib\ProudNetServer\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\AuthNetServer.lib;..\..\LicAuthLib\PNLicAuthCommon\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthCommon.lib;..\..\LicAuthLib\PNLicAuthClient\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicAuthClient.lib;..\..\PNLicenseSdk\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicenseSdk.lib;..\..\PNLicense\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\PNLicense.lib;..\WatermarkLib\bin\$(ConfigurationName)-x86_$(PlatformArchitecture)\WatermarkLib.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <ModuleDefinitionFile>WaterMark.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>@rem .dll 파일을 난독화합니다.
if exist "$(TargetDir)InstallHelper.dll" (
    del /f /q "$(TargetDir)InstallHelper.dll"
)

pushd .\
cd "$(ProjectDir)..\..\..\utils\CodeVirtualizer"
start /w Virtualizer.exe /protect .\ProudNet.cv /inputfile "$(TargetDir)$(TargetName)$(TargetExt)" /outputfile "$(TargetDir)InstallHelper.dll"
popd

@rem .dll 파일에 디지털 서명을 추가합니다.
"%PN_SIGN_TOOL_PATH%" sign /f "$(ProjectDir)..\..\..\utils\codeSign\202108_proudDigital.pfx" /t http://timestamp.comodoca.com/authenticode /p OHOSZN /v "$(TargetDir)InstallHelper.dll"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="WatermarkDll.cpp" />
    <ClCompile Include="stdafx.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="targetver.h" />
    <ClInclude Include="WatermarkDll.h" />
    <ClInclude Include="stdafx.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="WaterMark.def" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <ProjectExtensions>
    <VisualStudio>
      <UserProperties RESOURCE_FILE="WatermarkDll.rc" />
    </VisualStudio>
  </ProjectExtensions>
</Project>